\begin{Verbatim}[commandchars=\\\{\}]
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}include} \PYGcolorful{c+cpf}{\PYGcolorfulZlt{}time.h\PYGcolorfulZgt{} // @added}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}include} \PYGcolorful{c+cpf}{\PYGcolorfulZdq{}minilisp.h\PYGcolorfulZdq{}}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}include} \PYGcolorful{c+cpf}{\PYGcolorfulZdq{}reader.h\PYGcolorfulZdq{}}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}include} \PYGcolorful{c+cpf}{\PYGcolorfulZdq{}writer.h\PYGcolorfulZdq{}}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}include} \PYGcolorful{c+cpf}{\PYGcolorfulZdq{}alloc.h\PYGcolorfulZdq{}}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}include} \PYGcolorful{c+cpf}{\PYGcolorfulZdq{}compiler\PYGcolorfulZus{}new.h\PYGcolorfulZdq{}}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}include} \PYGcolorful{c+cpf}{\PYGcolorfulZdq{}stream.h\PYGcolorfulZdq{}}
\PYGcolorful{c+c1}{//\PYGcolorfulZsh{}include \PYGcolorfulZdq{}utf8.c\PYGcolorfulZdq{}}

\PYGcolorful{c+cp}{\PYGcolorfulZsh{}define env\PYGcolorfulZus{}t StrMap}
\PYGcolorful{k}{static} \PYGcolorful{n}{env\PYGcolorfulZus{}t}\PYGcolorful{o}{*} \PYGcolorful{n}{global\PYGcolorfulZus{}env} \PYGcolorful{o}{=} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{;}

\PYGcolorful{c+c1}{//\PYGcolorfulZsh{}define CHECK\PYGcolorfulZus{}BOUNDS    // enforce boundaries of array put/get}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}ifdef CPU\PYGcolorfulZus{}X86}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}define ARG\PYGcolorfulZus{}SPILLOVER 0}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}else}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}define ARG\PYGcolorfulZus{}SPILLOVER 3 }\PYGcolorful{c+c1}{// max 4 args via regs, rest via stack}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}endif}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}define LBDREG R4       }\PYGcolorful{c+c1}{// register base used for passing args to functions}

\PYGcolorful{c+cp}{\PYGcolorfulZsh{}define DEBUG\PYGcolorfulZus{}ASM\PYGcolorfulZus{}SRC}

\PYGcolorful{k}{static} \PYGcolorful{k+kt}{int} \PYGcolorful{n}{debug\PYGcolorfulZus{}mode} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}

\PYGcolorful{n}{env\PYGcolorfulZus{}entry}\PYGcolorful{o}{*} \PYGcolorful{n+nf}{lookup\PYGcolorfulZus{}global\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{k+kt}{char}\PYGcolorful{o}{*} \PYGcolorful{n}{name}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
  \PYGcolorful{n}{env\PYGcolorfulZus{}entry}\PYGcolorful{o}{*} \PYGcolorful{n}{res}\PYGcolorful{p}{;}
  \PYGcolorful{k+kt}{int} \PYGcolorful{n}{found} \PYGcolorful{o}{=} \PYGcolorful{n}{sm\PYGcolorfulZus{}get}\PYGcolorful{p}{(}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{,} \PYGcolorful{n}{name}\PYGcolorful{p}{,} \PYGcolorful{p}{(}\PYGcolorful{k+kt}{void}\PYGcolorful{o}{**}\PYGcolorful{p}{)}\PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{res}\PYGcolorful{p}{);}
  \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[lookup] \PYGcolorfulZpc{}s res: \PYGcolorfulZpc{}p\PYGcolorfulZbs{}n\PYGcolorfulZdq{},name,res);}
  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{found}\PYGcolorful{p}{)} \PYGcolorful{k}{return} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{;}
  \PYGcolorful{k}{return} \PYGcolorful{n}{res}\PYGcolorful{p}{;}
\PYGcolorful{p}{\PYGcolorfulZcb{}}

\PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n+nf}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{symbol}\PYGcolorful{p}{,} \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{cell}\PYGcolorful{p}{,} \PYGcolorful{n}{env\PYGcolorfulZus{}t}\PYGcolorful{o}{**} \PYGcolorful{n}{env}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
  \PYGcolorful{n}{env\PYGcolorfulZus{}entry}\PYGcolorful{o}{*} \PYGcolorful{n}{e}\PYGcolorful{p}{;}
  \PYGcolorful{k+kt}{int} \PYGcolorful{n}{found} \PYGcolorful{o}{=} \PYGcolorful{n}{sm\PYGcolorfulZus{}get}\PYGcolorful{p}{(}\PYGcolorful{o}{*}\PYGcolorful{n}{env}\PYGcolorful{p}{,} \PYGcolorful{n}{symbol}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{,} \PYGcolorful{p}{(}\PYGcolorful{k+kt}{void}\PYGcolorful{o}{**}\PYGcolorful{p}{)}\PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{e}\PYGcolorful{p}{);}

  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{found}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{n}{e}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{cell} \PYGcolorful{o}{=} \PYGcolorful{n}{cell}\PYGcolorful{p}{;}
    \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[insert\PYGcolorfulZus{}symbol] update \PYGcolorfulZpc{}s entry at \PYGcolorfulZpc{}p (cell: \PYGcolorfulZpc{}p value: \PYGcolorfulZpc{}d)\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},symbol\PYGcolorfulZhy{}\PYGcolorfulZgt{}ar.addr,e,e\PYGcolorfulZhy{}\PYGcolorfulZgt{}cell,e\PYGcolorfulZhy{}\PYGcolorfulZgt{}cell\PYGcolorfulZhy{}\PYGcolorfulZgt{}ar.value);}
    \PYGcolorful{k}{return} \PYGcolorful{n}{e}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{cell}\PYGcolorful{p}{;}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}

  \PYGcolorful{n}{e} \PYGcolorful{o}{=} \PYGcolorful{n}{malloc}\PYGcolorful{p}{(}\PYGcolorful{k}{sizeof}\PYGcolorful{p}{(}\PYGcolorful{n}{env\PYGcolorfulZus{}entry}\PYGcolorful{p}{));}
  \PYGcolorful{n}{memcpy}\PYGcolorful{p}{(}\PYGcolorful{n}{e}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{name}\PYGcolorful{p}{,} \PYGcolorful{p}{(}\PYGcolorful{k+kt}{char}\PYGcolorful{o}{*}\PYGcolorful{p}{)}\PYGcolorful{n}{symbol}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{,} \PYGcolorful{n}{symbol}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{dr}\PYGcolorful{p}{.}\PYGcolorful{n}{size}\PYGcolorful{p}{);}
  \PYGcolorful{n}{e}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{cell} \PYGcolorful{o}{=} \PYGcolorful{n}{cell}\PYGcolorful{p}{;}

  \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[insert\PYGcolorfulZus{}symbol] \PYGcolorfulZpc{}s entry at \PYGcolorfulZpc{}p (cell: \PYGcolorfulZpc{}p)\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},symbol\PYGcolorfulZhy{}\PYGcolorfulZgt{}ar.addr,e,e\PYGcolorfulZhy{}\PYGcolorfulZgt{}cell);}
  \PYGcolorful{n}{sm\PYGcolorfulZus{}put}\PYGcolorful{p}{(}\PYGcolorful{o}{*}\PYGcolorful{n}{env}\PYGcolorful{p}{,} \PYGcolorful{n}{e}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{name}\PYGcolorful{p}{,} \PYGcolorful{n}{e}\PYGcolorful{p}{);}

  \PYGcolorful{k}{return} \PYGcolorful{n}{e}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{cell}\PYGcolorful{p}{;}
\PYGcolorful{p}{\PYGcolorfulZcb{}}

\PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n+nf}{insert\PYGcolorfulZus{}global\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{symbol}\PYGcolorful{p}{,} \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{cell}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
  \PYGcolorful{k}{return} \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{symbol}\PYGcolorful{p}{,} \PYGcolorful{n}{cell}\PYGcolorful{p}{,} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
\PYGcolorful{p}{\PYGcolorfulZcb{}}

\PYGcolorful{c+cp}{\PYGcolorfulZsh{}define TMP\PYGcolorfulZus{}PRINT\PYGcolorfulZus{}BUFSZ 1024}

\PYGcolorful{k}{static} \PYGcolorful{k+kt}{FILE}\PYGcolorful{o}{*} \PYGcolorful{n}{jit\PYGcolorfulZus{}out}\PYGcolorful{p}{;}
\PYGcolorful{k}{static} \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{cell\PYGcolorfulZus{}heap\PYGcolorfulZus{}start}\PYGcolorful{p}{;}
\PYGcolorful{k}{static} \PYGcolorful{k+kt}{int} \PYGcolorful{n}{label\PYGcolorfulZus{}skip\PYGcolorfulZus{}count} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
\PYGcolorful{k}{static} \PYGcolorful{k+kt}{char} \PYGcolorful{n}{temp\PYGcolorfulZus{}print\PYGcolorfulZus{}buffer}\PYGcolorful{p}{[}\PYGcolorful{n}{TMP\PYGcolorfulZus{}PRINT\PYGcolorfulZus{}BUFSZ}\PYGcolorful{p}{];}
\PYGcolorful{k}{static} \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{consed\PYGcolorfulZus{}type\PYGcolorfulZus{}error}\PYGcolorful{p}{;}
\PYGcolorful{k}{static} \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{prototype\PYGcolorfulZus{}type\PYGcolorfulZus{}error}\PYGcolorful{p}{;}
\PYGcolorful{k}{static} \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{prototype\PYGcolorfulZus{}nil}\PYGcolorful{p}{;}
\PYGcolorful{k}{static} \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
\PYGcolorful{k}{static} \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{prototype\PYGcolorfulZus{}any}\PYGcolorful{p}{;}
\PYGcolorful{k}{static} \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{prototype\PYGcolorfulZus{}void}\PYGcolorful{p}{;}
\PYGcolorful{k}{static} \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{prototype\PYGcolorfulZus{}struct}\PYGcolorful{p}{;}
\PYGcolorful{k}{static} \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{prototype\PYGcolorfulZus{}struct\PYGcolorfulZus{}def}\PYGcolorful{p}{;}
\PYGcolorful{k}{static} \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{prototype\PYGcolorfulZus{}stream}\PYGcolorful{p}{;}
\PYGcolorful{k}{static} \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{prototype\PYGcolorfulZus{}string}\PYGcolorful{p}{;}
\PYGcolorful{k}{static} \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{prototype\PYGcolorfulZus{}symbol}\PYGcolorful{p}{;}
\PYGcolorful{k}{static} \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{prototype\PYGcolorfulZus{}lambda}\PYGcolorful{p}{;}
\PYGcolorful{k}{static} \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{prototype\PYGcolorfulZus{}cons}\PYGcolorful{p}{;}

\PYGcolorful{c+cp}{\PYGcolorfulZsh{}ifdef CPU\PYGcolorfulZus{}ARM}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}include} \PYGcolorful{c+cpf}{\PYGcolorfulZdq{}jit\PYGcolorfulZus{}arm\PYGcolorfulZus{}raw.c\PYGcolorfulZdq{}}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}define PTRSZ 4}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}endif}

\PYGcolorful{c+cp}{\PYGcolorfulZsh{}ifdef CPU\PYGcolorfulZus{}X64}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}include} \PYGcolorful{c+cpf}{\PYGcolorfulZdq{}jit\PYGcolorfulZus{}x64.c\PYGcolorfulZdq{}}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}define PTRSZ 8}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}endif}

\PYGcolorful{c+cp}{\PYGcolorfulZsh{}ifdef CPU\PYGcolorfulZus{}X86}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}include} \PYGcolorful{c+cpf}{\PYGcolorfulZdq{}jit\PYGcolorfulZus{}x86.c\PYGcolorfulZdq{}}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}define PTRSZ 4}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}endif}

\PYGcolorful{c+cp}{\PYGcolorfulZsh{}ifdef \PYGcolorfulZus{}\PYGcolorfulZus{}AMIGA}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}include} \PYGcolorful{c+cpf}{\PYGcolorfulZdq{}jit\PYGcolorfulZus{}m68k.c\PYGcolorfulZdq{}}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}define PTRSZ 4}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}endif}

\PYGcolorful{k+kt}{void} \PYGcolorful{n+nf}{debug\PYGcolorfulZus{}break}\PYGcolorful{p}{(}\PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{arg}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
  \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}argr0: \PYGcolorfulZpc{}p}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{arg}\PYGcolorful{p}{);}
  \PYGcolorful{n}{exit}\PYGcolorful{p}{(}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
\PYGcolorful{p}{\PYGcolorfulZcb{}}

\PYGcolorful{k+kt}{int} \PYGcolorful{n}{lastClock} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;} \PYGcolorful{c+c1}{//@added time remember}

\PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n+nf}{lisp\PYGcolorfulZus{}print}\PYGcolorful{p}{(}\PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{arg}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
  \PYGcolorful{n}{lisp\PYGcolorfulZus{}write}\PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{,} \PYGcolorful{n}{temp\PYGcolorfulZus{}print\PYGcolorfulZus{}buffer}\PYGcolorful{p}{,} \PYGcolorful{n}{TMP\PYGcolorfulZus{}PRINT\PYGcolorfulZus{}BUFSZ}\PYGcolorful{p}{);}
  \PYGcolorful{k+kt}{int} \PYGcolorful{n}{c} \PYGcolorful{o}{=} \PYGcolorful{n}{clock}\PYGcolorful{p}{();} \PYGcolorful{c+c1}{//@time}
  \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZpc{}d}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}t}\PYGcolorful{l+s}{\PYGcolorfulZpc{}s}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,} \PYGcolorful{p}{(}\PYGcolorful{n}{c}\PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{n}{lastClock}\PYGcolorful{p}{)}\PYGcolorful{o}{/}\PYGcolorful{l+m+mi}{1000}\PYGcolorful{p}{,} \PYGcolorful{n}{temp\PYGcolorfulZus{}print\PYGcolorfulZus{}buffer}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{//@displays time}
  \PYGcolorful{n}{lastClock} \PYGcolorful{o}{=} \PYGcolorful{n}{c}\PYGcolorful{p}{;} \PYGcolorful{c+c1}{//@time}
  \PYGcolorful{k}{return} \PYGcolorful{n}{arg}\PYGcolorful{p}{;}
\PYGcolorful{p}{\PYGcolorfulZcb{}}

\PYGcolorful{k+kt}{void} \PYGcolorful{n+nf}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{k+kt}{int} \PYGcolorful{n}{dreg}\PYGcolorful{p}{,} \PYGcolorful{n}{Arg} \PYGcolorful{n}{arg}\PYGcolorful{p}{,} \PYGcolorful{n}{Frame}\PYGcolorful{o}{*} \PYGcolorful{n}{f}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}CONST}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{c+c1}{// argument is a constant like 123, \PYGcolorfulZdq{}foo\PYGcolorfulZdq{}}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{p}{,} \PYGcolorful{p}{(}\PYGcolorful{n}{jit\PYGcolorfulZus{}word\PYGcolorfulZus{}t}\PYGcolorful{p}{)}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{cell}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{value}\PYGcolorful{p}{);}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}ENV}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{c+c1}{// argument is an environment table entry, load e\PYGcolorfulZhy{}\PYGcolorfulZgt{}cell\PYGcolorfulZhy{}\PYGcolorfulZgt{}ar.value}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}lea}\PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{p}{,} \PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{env}\PYGcolorful{p}{);}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{p}{);}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{p}{);}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}REG}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{c+c1}{// argument comes from a register}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{p}{,} \PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{slot}\PYGcolorful{p}{);}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{p}{);}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}REG\PYGcolorfulZus{}INT}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{o}{!=}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{slot}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{p}{,} \PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{slot}\PYGcolorful{p}{);}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}STACK}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}loading int from stack slot \PYGcolorfulZpc{}d + sp \PYGcolorfulZpc{}d to reg \PYGcolorfulZpc{}d\PYGcolorfulZbs{}n\PYGcolorfulZdq{},arg.slot,f\PYGcolorfulZhy{}\PYGcolorfulZgt{}sp,dreg);}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr\PYGcolorfulZus{}stack}\PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{p}{,} \PYGcolorful{n}{PTRSZ}\PYGcolorful{o}{*}\PYGcolorful{p}{(}\PYGcolorful{n}{f}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{sp}\PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{slot}\PYGcolorful{p}{));}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{p}{);}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}STACK\PYGcolorfulZus{}INT}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}loading int from stack\PYGcolorfulZus{}int sp \PYGcolorfulZpc{}d \PYGcolorfulZhy{} slot \PYGcolorfulZpc{}d to reg \PYGcolorfulZpc{}d\PYGcolorfulZbs{}n\PYGcolorfulZdq{},f\PYGcolorfulZhy{}\PYGcolorfulZgt{}sp,arg.slot,dreg);}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr\PYGcolorfulZus{}stack}\PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{p}{,} \PYGcolorful{n}{PTRSZ}\PYGcolorful{o}{*}\PYGcolorful{p}{(}\PYGcolorful{n}{f}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{sp}\PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{slot}\PYGcolorful{p}{));}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{p}{,} \PYGcolorful{l+m+mh}{0xdeadbeef}\PYGcolorful{p}{);}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
\PYGcolorful{p}{\PYGcolorfulZcb{}}

\PYGcolorful{k+kt}{void} \PYGcolorful{n+nf}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{k+kt}{int} \PYGcolorful{n}{dreg}\PYGcolorful{p}{,} \PYGcolorful{n}{Arg} \PYGcolorful{n}{arg}\PYGcolorful{p}{,} \PYGcolorful{n}{Frame}\PYGcolorful{o}{*} \PYGcolorful{n}{f}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}CONST}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{c+c1}{// argument is a constant like 123, \PYGcolorfulZdq{}foo\PYGcolorfulZdq{}}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{p}{,} \PYGcolorful{p}{(}\PYGcolorful{n}{jit\PYGcolorfulZus{}word\PYGcolorfulZus{}t}\PYGcolorful{p}{)}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{cell}\PYGcolorful{p}{);}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}ENV}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}lea}\PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{p}{,} \PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{env}\PYGcolorful{p}{);}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{p}{);}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}REG}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{p}{,} \PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{slot}\PYGcolorful{p}{);}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}REG\PYGcolorfulZus{}INT}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}STACK}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}loading cell from stack slot \PYGcolorfulZpc{}d + sp \PYGcolorfulZpc{}d to reg \PYGcolorfulZpc{}d\PYGcolorfulZbs{}n\PYGcolorfulZdq{},arg.slot,f\PYGcolorfulZhy{}\PYGcolorfulZgt{}sp,dreg);}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr\PYGcolorfulZus{}stack}\PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{p}{,} \PYGcolorful{n}{PTRSZ}\PYGcolorful{o}{*}\PYGcolorful{p}{(}\PYGcolorful{n}{f}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{sp}\PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{slot}\PYGcolorful{p}{));}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}STACK\PYGcolorfulZus{}INT}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{k+kt}{int} \PYGcolorful{n}{adjust} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
    \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}loading cell from stack\PYGcolorfulZus{}int sp \PYGcolorfulZpc{}d \PYGcolorfulZhy{} slot \PYGcolorfulZpc{}d + adjust \PYGcolorfulZpc{}d = \PYGcolorfulZpc{}d to reg \PYGcolorfulZpc{}d\PYGcolorfulZbs{}n\PYGcolorfulZdq{},f\PYGcolorfulZhy{}\PYGcolorfulZgt{}sp,arg.slot,adjust,f\PYGcolorfulZhy{}\PYGcolorfulZgt{}sp\PYGcolorfulZhy{}arg.slot+adjust,dreg);}
    \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{o}{!=}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}\PYGcolorful{n}{jit\PYGcolorfulZus{}push}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);} \PYGcolorful{n}{adjust}\PYGcolorful{o}{++}\PYGcolorful{p}{;\PYGcolorfulZcb{}}
    \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{o}{!=}\PYGcolorful{n}{R0}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}\PYGcolorful{n}{jit\PYGcolorfulZus{}push}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);} \PYGcolorful{n}{adjust}\PYGcolorful{o}{++}\PYGcolorful{p}{;\PYGcolorfulZcb{}}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr\PYGcolorfulZus{}stack}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,} \PYGcolorful{n}{PTRSZ}\PYGcolorful{o}{*}\PYGcolorful{p}{(}\PYGcolorful{n}{f}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{sp}\PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{slot}\PYGcolorful{o}{+}\PYGcolorful{n}{adjust}\PYGcolorful{p}{));}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
    \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{o}{!=}\PYGcolorful{n}{R0}\PYGcolorful{p}{)} \PYGcolorful{n}{jit\PYGcolorfulZus{}pop}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
    \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{o}{!=}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{)} \PYGcolorful{n}{jit\PYGcolorfulZus{}pop}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}load\PYGcolorfulZus{}cell unhandled arg.type: \PYGcolorfulZpc{}d\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{arg}\PYGcolorful{p}{.}\PYGcolorful{n}{type}\PYGcolorful{p}{);}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{dreg}\PYGcolorful{p}{,} \PYGcolorful{l+m+mh}{0xdeadcafe}\PYGcolorful{p}{);}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
\PYGcolorful{p}{\PYGcolorfulZcb{}}

\PYGcolorful{k+kt}{int} \PYGcolorful{n+nf}{get\PYGcolorfulZus{}sym\PYGcolorfulZus{}frame\PYGcolorfulZus{}idx}\PYGcolorful{p}{(}\PYGcolorful{k+kt}{char}\PYGcolorful{o}{*} \PYGcolorful{n}{argname}\PYGcolorful{p}{,} \PYGcolorful{n}{Arg}\PYGcolorful{o}{*} \PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{,} \PYGcolorful{k+kt}{int} \PYGcolorful{n}{ignore\PYGcolorfulZus{}regs}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
  \PYGcolorful{k+kt}{int} \PYGcolorful{n}{i}\PYGcolorful{p}{;}
  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{)} \PYGcolorful{k}{return} \PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{;}

  \PYGcolorful{k}{for} \PYGcolorful{p}{(}\PYGcolorful{n}{i}\PYGcolorful{o}{=}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;} \PYGcolorful{n}{i}\PYGcolorful{o}{\PYGcolorfulZlt{}}\PYGcolorful{n}{MAXFRAME}\PYGcolorful{p}{;} \PYGcolorful{n}{i}\PYGcolorful{o}{++}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{i}\PYGcolorful{p}{].}\PYGcolorful{n}{name}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}\PYGcolorfulZlt{}\PYGcolorfulZlt{} get\PYGcolorfulZus{}sym\PYGcolorfulZus{}frame\PYGcolorfulZus{}idx \PYGcolorfulZpc{}i (type \PYGcolorfulZpc{}d, reg = \PYGcolorfulZpc{}d, looking for \PYGcolorfulZpc{}s): \PYGcolorfulZpc{}s\PYGcolorfulZbs{}n\PYGcolorfulZdq{},i,fn\PYGcolorfulZus{}frame[i].type,ARGT\PYGcolorfulZus{}REG,argname,fn\PYGcolorfulZus{}frame[i].name);}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{p}{((}\PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{i}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}REG}\PYGcolorful{p}{)} \PYGcolorful{o}{\PYGcolorfulZam{}\PYGcolorfulZam{}} \PYGcolorful{n}{ignore\PYGcolorfulZus{}regs}\PYGcolorful{p}{))} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{strcmp}\PYGcolorful{p}{(}\PYGcolorful{n}{argname}\PYGcolorful{p}{,} \PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{i}\PYGcolorful{p}{].}\PYGcolorful{n}{name}\PYGcolorful{p}{))} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}!! get\PYGcolorfulZus{}sym\PYGcolorfulZus{}frame\PYGcolorfulZus{}idx \PYGcolorfulZpc{}i (type \PYGcolorfulZpc{}d): \PYGcolorfulZpc{}s\PYGcolorfulZbs{}n\PYGcolorfulZdq{},i,fn\PYGcolorfulZus{}frame[i].type,fn\PYGcolorfulZus{}frame[i].name);}
          \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}returning \PYGcolorfulZpc{}d\PYGcolorfulZbs{}n\PYGcolorfulZdq{},i);}
          \PYGcolorful{k}{return} \PYGcolorful{n}{i}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{return} \PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{;}
\PYGcolorful{p}{\PYGcolorfulZcb{}}

\PYGcolorful{c+c1}{// TODO: optimize!}
\PYGcolorful{k+kt}{int} \PYGcolorful{n+nf}{push\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{Arg}\PYGcolorful{o}{*} \PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
  \PYGcolorful{k+kt}{int} \PYGcolorful{n}{pushreg}\PYGcolorful{o}{=}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
  \PYGcolorful{k+kt}{int} \PYGcolorful{n}{i}\PYGcolorful{p}{;}

  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{)} \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}

  \PYGcolorful{k}{for} \PYGcolorful{p}{(}\PYGcolorful{n}{i}\PYGcolorful{o}{=}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;} \PYGcolorful{n}{i}\PYGcolorful{o}{\PYGcolorfulZlt{}}\PYGcolorful{n}{MAXFRAME}\PYGcolorful{p}{;} \PYGcolorful{n}{i}\PYGcolorful{o}{++}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{i}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}REG}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{pushreg}\PYGcolorful{o}{++}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}pushing \PYGcolorfulZpc{}d frame regs\PYGcolorfulZbs{}n\PYGcolorfulZdq{},pushreg);}
  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{pushreg}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}push}\PYGcolorful{p}{(}\PYGcolorful{n}{LBDREG}\PYGcolorful{p}{,}\PYGcolorful{n}{LBDREG}\PYGcolorful{o}{+}\PYGcolorful{n}{pushreg}\PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{);}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{return} \PYGcolorful{n}{pushreg}\PYGcolorful{p}{;}
\PYGcolorful{p}{\PYGcolorfulZcb{}}

\PYGcolorful{k+kt}{int} \PYGcolorful{n+nf}{pop\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{Arg}\PYGcolorful{o}{*} \PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
  \PYGcolorful{k+kt}{int} \PYGcolorful{n}{pushreg}\PYGcolorful{o}{=}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
  \PYGcolorful{k+kt}{int} \PYGcolorful{n}{i}\PYGcolorful{p}{;}

  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{)} \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}

  \PYGcolorful{k}{for} \PYGcolorful{p}{(}\PYGcolorful{n}{i}\PYGcolorful{o}{=}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;} \PYGcolorful{n}{i}\PYGcolorful{o}{\PYGcolorfulZlt{}}\PYGcolorful{n}{MAXFRAME}\PYGcolorful{p}{;} \PYGcolorful{n}{i}\PYGcolorful{o}{++}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{i}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}REG}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{pushreg}\PYGcolorful{o}{++}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}popping \PYGcolorfulZpc{}d frame regs\PYGcolorfulZbs{}n\PYGcolorfulZdq{},pushreg);}
  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{pushreg}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}pop}\PYGcolorful{p}{(}\PYGcolorful{n}{LBDREG}\PYGcolorful{p}{,}\PYGcolorful{n}{LBDREG}\PYGcolorful{o}{+}\PYGcolorful{n}{pushreg}\PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{);}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{return} \PYGcolorful{n}{pushreg}\PYGcolorful{p}{;}
\PYGcolorful{p}{\PYGcolorfulZcb{}}

\PYGcolorful{k}{static} \PYGcolorful{k+kt}{char}\PYGcolorful{o}{*} \PYGcolorful{n}{analyze\PYGcolorfulZus{}buffer}\PYGcolorful{p}{[}\PYGcolorful{n}{MAXFRAME}\PYGcolorful{p}{];}
\PYGcolorful{k+kt}{int} \PYGcolorful{n+nf}{analyze\PYGcolorfulZus{}fn}\PYGcolorful{p}{(}\PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{expr}\PYGcolorful{p}{,} \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{parent}\PYGcolorful{p}{,} \PYGcolorful{k+kt}{int} \PYGcolorful{n}{num\PYGcolorfulZus{}lets}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{expr}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}SYM}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{n}{env\PYGcolorfulZus{}entry}\PYGcolorful{o}{*} \PYGcolorful{n}{op\PYGcolorfulZus{}env} \PYGcolorful{o}{=} \PYGcolorful{n}{lookup\PYGcolorfulZus{}global\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{expr}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{);}
    \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{op\PYGcolorfulZus{}env}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{op} \PYGcolorful{o}{=} \PYGcolorful{n}{op\PYGcolorfulZus{}env}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{cell}\PYGcolorful{p}{;}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{op}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}BUILTIN}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}analyze\PYGcolorfulZus{}fn: found builtin: \PYGcolorfulZpc{}s\PYGcolorfulZbs{}n\PYGcolorfulZdq{},expr\PYGcolorfulZhy{}\PYGcolorfulZgt{}ar.addr);}
        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{op}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{value} \PYGcolorful{o}{==} \PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}LET}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{sym} \PYGcolorful{o}{=} \PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{cdr}\PYGcolorful{p}{(}\PYGcolorful{n}{parent}\PYGcolorful{p}{));}
          \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{sym}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
            \PYGcolorful{k+kt}{int} \PYGcolorful{n}{existing} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{,} \PYGcolorful{n}{i}\PYGcolorful{p}{;}
            \PYGcolorful{k}{for} \PYGcolorful{p}{(}\PYGcolorful{n}{i}\PYGcolorful{o}{=}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;} \PYGcolorful{n}{i}\PYGcolorful{o}{\PYGcolorfulZlt{}}\PYGcolorful{n}{num\PYGcolorfulZus{}lets}\PYGcolorful{p}{;} \PYGcolorful{n}{i}\PYGcolorful{o}{++}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
              \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{strcmp}\PYGcolorful{p}{(}\PYGcolorful{n}{analyze\PYGcolorfulZus{}buffer}\PYGcolorful{p}{[}\PYGcolorful{n}{i}\PYGcolorful{p}{],} \PYGcolorful{n}{sym}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{))} \PYGcolorful{p}{\PYGcolorfulZob{}}
                \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}\PYGcolorfulZhy{}\PYGcolorfulZhy{} we already know local \PYGcolorfulZpc{}s\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},sym\PYGcolorfulZhy{}\PYGcolorfulZgt{}ar.addr);}
                \PYGcolorful{n}{existing} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{;}
                \PYGcolorful{k}{break}\PYGcolorful{p}{;}
              \PYGcolorful{p}{\PYGcolorfulZcb{}}
            \PYGcolorful{p}{\PYGcolorfulZcb{}}
            \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{existing}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
              \PYGcolorful{n}{analyze\PYGcolorfulZus{}buffer}\PYGcolorful{p}{[}\PYGcolorful{n}{num\PYGcolorfulZus{}lets}\PYGcolorful{p}{]} \PYGcolorful{o}{=} \PYGcolorful{n}{sym}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{;}
              \PYGcolorful{n}{num\PYGcolorfulZus{}lets}\PYGcolorful{o}{++}\PYGcolorful{p}{;}
            \PYGcolorful{p}{\PYGcolorfulZcb{}}
          \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
            \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}analyze\PYGcolorfulZus{}fn error: malformed let!\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
          \PYGcolorful{p}{\PYGcolorfulZcb{}}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{expr}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}CONS}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{expr}\PYGcolorful{p}{))} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{num\PYGcolorfulZus{}lets} \PYGcolorful{o}{=} \PYGcolorful{n}{analyze\PYGcolorfulZus{}fn}\PYGcolorful{p}{(}\PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{expr}\PYGcolorful{p}{),} \PYGcolorful{n}{expr}\PYGcolorful{p}{,} \PYGcolorful{n}{num\PYGcolorfulZus{}lets}\PYGcolorful{p}{);}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{cdr}\PYGcolorful{p}{(}\PYGcolorful{n}{expr}\PYGcolorful{p}{))} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{num\PYGcolorfulZus{}lets} \PYGcolorful{o}{=} \PYGcolorful{n}{analyze\PYGcolorfulZus{}fn}\PYGcolorful{p}{(}\PYGcolorful{n}{cdr}\PYGcolorful{p}{(}\PYGcolorful{n}{expr}\PYGcolorful{p}{),} \PYGcolorful{n}{expr}\PYGcolorful{p}{,} \PYGcolorful{n}{num\PYGcolorfulZus{}lets}\PYGcolorful{p}{);}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{return} \PYGcolorful{n}{num\PYGcolorfulZus{}lets}\PYGcolorful{p}{;}
\PYGcolorful{p}{\PYGcolorfulZcb{}}

\PYGcolorful{k+kt}{int} \PYGcolorful{n+nf}{compatible\PYGcolorfulZus{}type}\PYGcolorful{p}{(}\PYGcolorful{k+kt}{int} \PYGcolorful{n}{given}\PYGcolorful{p}{,} \PYGcolorful{k+kt}{int} \PYGcolorful{n}{required}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{given} \PYGcolorful{o}{==} \PYGcolorful{n}{required}\PYGcolorful{p}{)} \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{;}
  \PYGcolorful{k}{if} \PYGcolorful{p}{((}\PYGcolorful{n}{given} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}STR} \PYGcolorful{o}{||} \PYGcolorful{n}{given} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}BYTES}\PYGcolorful{p}{)} \PYGcolorful{o}{\PYGcolorfulZam{}\PYGcolorfulZam{}}
      \PYGcolorful{p}{(}\PYGcolorful{n}{required} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}STR} \PYGcolorful{o}{||} \PYGcolorful{n}{required} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}BYTES}\PYGcolorful{p}{))} \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{;}
  \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
\PYGcolorful{p}{\PYGcolorfulZcb{}}

\PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n+nf}{clean\PYGcolorfulZus{}return}\PYGcolorful{p}{(}\PYGcolorful{k+kt}{int} \PYGcolorful{n}{args\PYGcolorfulZus{}pushed}\PYGcolorful{p}{,} \PYGcolorful{n}{Frame}\PYGcolorful{o}{*} \PYGcolorful{n}{frame}\PYGcolorful{p}{,} \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{compiled\PYGcolorfulZus{}type}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{args\PYGcolorfulZus{}pushed}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}inc\PYGcolorfulZus{}stack}\PYGcolorful{p}{(}\PYGcolorful{n}{args\PYGcolorfulZus{}pushed}\PYGcolorful{o}{*}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);}
    \PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{sp}\PYGcolorful{o}{\PYGcolorfulZhy{}=}\PYGcolorful{n}{args\PYGcolorfulZus{}pushed}\PYGcolorful{p}{;}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}

  \PYGcolorful{k}{return} \PYGcolorful{n}{compiled\PYGcolorfulZus{}type}\PYGcolorful{p}{;}
\PYGcolorful{p}{\PYGcolorfulZcb{}}

\PYGcolorful{c+c1}{// returns a prototype cell that can be used for type information}
\PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n+nf}{compile\PYGcolorfulZus{}expr}\PYGcolorful{p}{(}\PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{expr}\PYGcolorful{p}{,} \PYGcolorful{n}{Frame}\PYGcolorful{o}{*} \PYGcolorful{n}{frame}\PYGcolorful{p}{,} \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
  \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}any}\PYGcolorful{p}{;}
  \PYGcolorful{n}{Arg}\PYGcolorful{o}{*} \PYGcolorful{n}{fn\PYGcolorfulZus{}frame} \PYGcolorful{o}{=} \PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{;}
  \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{opsym}\PYGcolorful{p}{,} \PYGcolorful{o}{*}\PYGcolorful{n}{args}\PYGcolorful{p}{,} \PYGcolorful{o}{*}\PYGcolorful{n}{orig\PYGcolorfulZus{}args}\PYGcolorful{p}{,} \PYGcolorful{o}{*}\PYGcolorful{n}{signature\PYGcolorfulZus{}args}\PYGcolorful{p}{,} \PYGcolorful{o}{*}\PYGcolorful{n}{op}\PYGcolorful{p}{,} \PYGcolorful{o}{*}\PYGcolorful{n}{orig\PYGcolorfulZus{}op}\PYGcolorful{o}{=}\PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{;}
  \PYGcolorful{n}{env\PYGcolorfulZus{}entry}\PYGcolorful{o}{*} \PYGcolorful{n}{op\PYGcolorfulZus{}env}\PYGcolorful{p}{;}
  \PYGcolorful{k+kt}{char}\PYGcolorful{o}{*} \PYGcolorful{n}{op\PYGcolorfulZus{}name}\PYGcolorful{p}{;}

  \PYGcolorful{k+kt}{int} \PYGcolorful{n}{is\PYGcolorfulZus{}let} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
  \PYGcolorful{k+kt}{int} \PYGcolorful{n}{argi} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
  \PYGcolorful{k+kt}{int} \PYGcolorful{n}{args\PYGcolorfulZus{}pushed} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
  \PYGcolorful{n}{Arg} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{MAXARGS}\PYGcolorful{p}{];}

  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{expr}\PYGcolorful{p}{)} \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{frame}\PYGcolorful{p}{)} \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}

  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{expr}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{!=} \PYGcolorful{n}{TAG\PYGcolorfulZus{}CONS}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{expr}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}SYM}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{k+kt}{int} \PYGcolorful{n}{arg\PYGcolorfulZus{}frame\PYGcolorfulZus{}idx} \PYGcolorful{o}{=} \PYGcolorful{n}{get\PYGcolorfulZus{}sym\PYGcolorfulZus{}frame\PYGcolorfulZus{}idx}\PYGcolorful{p}{(}\PYGcolorful{n}{expr}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{,} \PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{env\PYGcolorfulZus{}entry}\PYGcolorful{o}{*} \PYGcolorful{n}{env}\PYGcolorful{p}{;}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{arg\PYGcolorfulZus{}frame\PYGcolorfulZus{}idx}\PYGcolorful{o}{\PYGcolorfulZgt{}=}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,} \PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{arg\PYGcolorfulZus{}frame\PYGcolorfulZus{}idx}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
        \PYGcolorful{k}{return} \PYGcolorful{n}{compiled\PYGcolorfulZus{}type}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{n}{env} \PYGcolorful{o}{=} \PYGcolorful{n}{lookup\PYGcolorfulZus{}global\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{expr}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{);}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{env}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{value} \PYGcolorful{o}{=} \PYGcolorful{n}{env}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{cell}\PYGcolorful{p}{;}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,(}\PYGcolorful{n}{jit\PYGcolorfulZus{}word\PYGcolorfulZus{}t}\PYGcolorful{p}{)}\PYGcolorful{n}{env}\PYGcolorful{p}{);}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
        \PYGcolorful{k}{return} \PYGcolorful{n}{value}\PYGcolorful{p}{;} \PYGcolorful{c+c1}{// FIXME TODO forbid later type change}
      \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}undefined symbol \PYGcolorfulZpc{}s\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,(}\PYGcolorful{k+kt}{char}\PYGcolorful{o}{*}\PYGcolorful{p}{)}\PYGcolorful{n}{expr}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{);}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
        \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{c+c1}{// return the expr}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,(}\PYGcolorful{n}{jit\PYGcolorfulZus{}word\PYGcolorfulZus{}t}\PYGcolorful{p}{)}\PYGcolorful{n}{expr}\PYGcolorful{p}{);}
      \PYGcolorful{k}{return} \PYGcolorful{n}{compiled\PYGcolorfulZus{}type}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}

  \PYGcolorful{n}{cell\PYGcolorfulZus{}heap\PYGcolorfulZus{}start} \PYGcolorful{o}{=} \PYGcolorful{n}{get\PYGcolorfulZus{}cell\PYGcolorfulZus{}heap}\PYGcolorful{p}{();}

  \PYGcolorful{n}{opsym} \PYGcolorful{o}{=} \PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{expr}\PYGcolorful{p}{);}
  \PYGcolorful{n}{args} \PYGcolorful{o}{=} \PYGcolorful{n}{cdr}\PYGcolorful{p}{(}\PYGcolorful{n}{expr}\PYGcolorful{p}{);}
  \PYGcolorful{n}{orig\PYGcolorfulZus{}args} \PYGcolorful{o}{=} \PYGcolorful{n}{args}\PYGcolorful{p}{;} \PYGcolorful{c+c1}{// keep around for specials forms like DO}
  \PYGcolorful{n}{signature\PYGcolorfulZus{}args} \PYGcolorful{o}{=} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{;}

  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{opsym} \PYGcolorful{o}{||} \PYGcolorful{n}{opsym}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{!=} \PYGcolorful{n}{TAG\PYGcolorfulZus{}SYM}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}error: non\PYGcolorfulZhy{}symbol in operator position\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
    \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}

  \PYGcolorful{n}{op\PYGcolorfulZus{}name} \PYGcolorful{o}{=} \PYGcolorful{p}{(}\PYGcolorful{k+kt}{char}\PYGcolorful{o}{*}\PYGcolorful{p}{)}\PYGcolorful{n}{opsym}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{;}
  \PYGcolorful{n}{op\PYGcolorfulZus{}env} \PYGcolorful{o}{=} \PYGcolorful{n}{lookup\PYGcolorfulZus{}global\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{op\PYGcolorfulZus{}name}\PYGcolorful{p}{);}

  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{op\PYGcolorfulZus{}env} \PYGcolorful{o}{||} \PYGcolorful{o}{!}\PYGcolorful{n}{op\PYGcolorfulZus{}env}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{cell}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}error: undefined symbol \PYGcolorfulZpc{}s in operator position\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{op\PYGcolorfulZus{}name}\PYGcolorful{p}{);}
    \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{n}{op} \PYGcolorful{o}{=} \PYGcolorful{n}{op\PYGcolorfulZus{}env}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{cell}\PYGcolorful{p}{;}

  \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}op tag: \PYGcolorfulZpc{}d\PYGcolorfulZbs{}n\PYGcolorfulZdq{},op\PYGcolorfulZhy{}\PYGcolorfulZgt{}tag);}
  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{op}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}BUILTIN}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{n}{signature\PYGcolorfulZus{}args} \PYGcolorful{o}{=} \PYGcolorful{n}{op}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{dr}\PYGcolorful{p}{.}\PYGcolorful{n}{next}\PYGcolorful{p}{;}

    \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{op}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{value} \PYGcolorful{o}{==} \PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}LET}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{is\PYGcolorfulZus{}let} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{op}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}LAMBDA}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{n}{signature\PYGcolorfulZus{}args} \PYGcolorful{o}{=} \PYGcolorful{n}{car}\PYGcolorful{p}{((}\PYGcolorful{n}{Cell}\PYGcolorful{o}{*}\PYGcolorful{p}{)(}\PYGcolorful{n}{op}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{));}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{op}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}STRUCT\PYGcolorfulZus{}DEF}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{n}{signature\PYGcolorfulZus{}args} \PYGcolorful{o}{=} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{;}
    \PYGcolorful{n}{orig\PYGcolorfulZus{}op} \PYGcolorful{o}{=} \PYGcolorful{n}{op}\PYGcolorful{p}{;}
    \PYGcolorful{n}{op\PYGcolorfulZus{}env} \PYGcolorful{o}{=} \PYGcolorful{n}{lookup\PYGcolorfulZus{}global\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}new\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
    \PYGcolorful{n}{op} \PYGcolorful{o}{=} \PYGcolorful{n}{op\PYGcolorfulZus{}env}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{cell}\PYGcolorful{p}{;}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}error: non\PYGcolorfulZhy{}lambda/struct symbol \PYGcolorfulZpc{}s in operator position\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,(}\PYGcolorful{k+kt}{char}\PYGcolorful{o}{*}\PYGcolorful{p}{)}\PYGcolorful{n}{opsym}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{);}
    \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}

  \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[op] \PYGcolorfulZpc{}s\PYGcolorfulZbs{}n\PYGcolorfulZdq{},debug\PYGcolorfulZus{}buf);}
  \PYGcolorful{c+c1}{//lisp\PYGcolorfulZus{}write(signature\PYGcolorfulZus{}args, debug\PYGcolorfulZus{}buf, sizeof(debug\PYGcolorfulZus{}buf));}
  \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[sig] \PYGcolorfulZpc{}s\PYGcolorfulZbs{}n\PYGcolorfulZdq{},debug\PYGcolorfulZus{}buf);}

\PYGcolorful{c+cp}{\PYGcolorfulZsh{}ifdef DEBUG\PYGcolorfulZus{}ASM\PYGcolorfulZus{}SRC}
  \PYGcolorful{k+kt}{char}\PYGcolorful{o}{*} \PYGcolorful{n}{debug\PYGcolorfulZus{}buf} \PYGcolorful{o}{=} \PYGcolorful{n}{malloc}\PYGcolorful{p}{(}\PYGcolorful{l+m+mi}{256}\PYGcolorful{p}{);}
  \PYGcolorful{n}{lisp\PYGcolorfulZus{}write}\PYGcolorful{p}{(}\PYGcolorful{n}{expr}\PYGcolorful{p}{,} \PYGcolorful{n}{debug\PYGcolorfulZus{}buf}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{255}\PYGcolorful{p}{);}
  \PYGcolorful{n}{jit\PYGcolorfulZus{}comment}\PYGcolorful{p}{(}\PYGcolorful{n}{debug\PYGcolorfulZus{}buf}\PYGcolorful{p}{);}
  \PYGcolorful{n}{free}\PYGcolorful{p}{(}\PYGcolorful{n}{debug\PYGcolorfulZus{}buf}\PYGcolorful{p}{);}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}endif}

  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{debug\PYGcolorfulZus{}mode}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{k+kt}{char}\PYGcolorful{o}{*} \PYGcolorful{n}{debug\PYGcolorfulZus{}buf} \PYGcolorful{o}{=} \PYGcolorful{n}{malloc}\PYGcolorful{p}{(}\PYGcolorful{l+m+mi}{256}\PYGcolorful{p}{);}
    \PYGcolorful{n}{push\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}
    \PYGcolorful{n}{lisp\PYGcolorfulZus{}write}\PYGcolorful{p}{(}\PYGcolorful{n}{expr}\PYGcolorful{p}{,} \PYGcolorful{n}{debug\PYGcolorfulZus{}buf}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{256}\PYGcolorful{p}{);}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}push}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,} \PYGcolorful{n}{ARGR1}\PYGcolorful{p}{);}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}lea}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,} \PYGcolorful{n}{debug\PYGcolorfulZus{}buf}\PYGcolorful{p}{);}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}lea}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR1}\PYGcolorful{p}{,} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{debug\PYGcolorfulZus{}handler}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}dbg\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}pop}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,} \PYGcolorful{n}{ARGR1}\PYGcolorful{p}{);}
    \PYGcolorful{n}{pop\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}

  \PYGcolorful{c+c1}{// first, we need a signature}

  \PYGcolorful{k}{do} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{arg} \PYGcolorful{o}{=} \PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{args}\PYGcolorful{p}{);}
    \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{signature\PYGcolorfulZus{}arg} \PYGcolorful{o}{=} \PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{signature\PYGcolorfulZus{}args}\PYGcolorful{p}{);}
    \PYGcolorful{k+kt}{char} \PYGcolorful{n}{arg\PYGcolorfulZus{}name}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{32}\PYGcolorful{p}{];}
    \PYGcolorful{n}{snprintf}\PYGcolorful{p}{(}\PYGcolorful{n}{arg\PYGcolorfulZus{}name}\PYGcolorful{p}{,}\PYGcolorful{k}{sizeof}\PYGcolorful{p}{(}\PYGcolorful{n}{arg\PYGcolorfulZus{}name}\PYGcolorful{p}{),}\PYGcolorful{l+s}{\PYGcolorfulZdq{}a\PYGcolorfulZpc{}d\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{argi}\PYGcolorful{o}{+}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{);}
    \PYGcolorful{c+c1}{// 1. is the arg the required type? i.e. a pointer or a number?}

    \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{signature\PYGcolorfulZus{}arg} \PYGcolorful{o}{\PYGcolorfulZam{}\PYGcolorfulZam{}} \PYGcolorful{n}{signature\PYGcolorfulZus{}arg}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}CONS}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{c+c1}{// named argument}
      \PYGcolorful{n}{snprintf}\PYGcolorful{p}{(}\PYGcolorful{n}{arg\PYGcolorfulZus{}name}\PYGcolorful{p}{,}\PYGcolorful{k}{sizeof}\PYGcolorful{p}{(}\PYGcolorful{n}{arg\PYGcolorfulZus{}name}\PYGcolorful{p}{),}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZpc{}s\PYGcolorfulZdq{}}\PYGcolorful{p}{,(}\PYGcolorful{k+kt}{char}\PYGcolorful{o}{*}\PYGcolorful{p}{)(}\PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{signature\PYGcolorfulZus{}arg}\PYGcolorful{p}{)}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{));}

      \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}named arg: \PYGcolorfulZpc{}s\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},arg\PYGcolorfulZus{}name);}
      \PYGcolorful{n}{signature\PYGcolorfulZus{}arg} \PYGcolorful{o}{=} \PYGcolorful{n}{cdr}\PYGcolorful{p}{(}\PYGcolorful{n}{signature\PYGcolorfulZus{}arg}\PYGcolorful{p}{);}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}

    \PYGcolorful{c+cm}{/*if (signature\PYGcolorfulZus{}args) \PYGcolorfulZob{}}
\PYGcolorful{c+cm}{      char dbg[256];}
\PYGcolorful{c+cm}{      lisp\PYGcolorfulZus{}write(signature\PYGcolorfulZus{}args,dbg,256);}
\PYGcolorful{c+cm}{      printf(\PYGcolorfulZdq{}!! \PYGcolorfulZpc{}s sig: \PYGcolorfulZpc{}s\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},opsym\PYGcolorfulZhy{}\PYGcolorfulZgt{}ar.addr,dbg);}
\PYGcolorful{c+cm}{    \PYGcolorfulZcb{}*/}

    \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{arg} \PYGcolorful{o}{\PYGcolorfulZam{}\PYGcolorfulZam{}} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{signature\PYGcolorfulZus{}args} \PYGcolorful{o}{||} \PYGcolorful{n}{signature\PYGcolorfulZus{}arg}\PYGcolorful{p}{))} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{k+kt}{int} \PYGcolorful{n}{given\PYGcolorfulZus{}tag} \PYGcolorful{o}{=} \PYGcolorful{n}{arg}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag}\PYGcolorful{p}{;}
      \PYGcolorful{k+kt}{int} \PYGcolorful{n}{sig\PYGcolorfulZus{}tag} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{signature\PYGcolorfulZus{}arg}\PYGcolorful{p}{)} \PYGcolorful{n}{sig\PYGcolorfulZus{}tag} \PYGcolorful{o}{=} \PYGcolorful{n}{signature\PYGcolorfulZus{}arg}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag}\PYGcolorful{p}{;}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{is\PYGcolorfulZus{}let} \PYGcolorful{o}{\PYGcolorfulZam{}\PYGcolorfulZam{}} \PYGcolorful{n}{argi}\PYGcolorful{o}{==}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{k+kt}{int} \PYGcolorful{n}{type\PYGcolorfulZus{}hint} \PYGcolorful{o}{=} \PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{;}
        \PYGcolorful{c+c1}{// check the symbol to see if we already have type information}
        \PYGcolorful{k+kt}{int} \PYGcolorful{n}{fidx} \PYGcolorful{o}{=} \PYGcolorful{n}{get\PYGcolorfulZus{}sym\PYGcolorfulZus{}frame\PYGcolorfulZus{}idx}\PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{].}\PYGcolorful{n}{cell}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{,} \PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{);}
        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{fidx}\PYGcolorful{o}{\PYGcolorfulZgt{}=}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}existing type information for \PYGcolorfulZpc{}s: \PYGcolorfulZpc{}d\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{}, argdefs[0].cell\PYGcolorfulZhy{}\PYGcolorfulZgt{}ar.addr,fn\PYGcolorfulZus{}frame[fidx].type);}
          \PYGcolorful{n}{type\PYGcolorfulZus{}hint} \PYGcolorful{o}{=} \PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{fidx}\PYGcolorful{p}{].}\PYGcolorful{n}{type}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}

        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{given\PYGcolorfulZus{}tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}INT} \PYGcolorful{o}{||} \PYGcolorful{n}{type\PYGcolorfulZus{}hint} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}STACK\PYGcolorfulZus{}INT}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}INT mode of let\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{});}
          \PYGcolorful{c+c1}{// let prefers raw integers!}
          \PYGcolorful{n}{sig\PYGcolorfulZus{}tag} \PYGcolorful{o}{=} \PYGcolorful{n}{TAG\PYGcolorfulZus{}INT}\PYGcolorful{p}{;}
          \PYGcolorful{n}{signature\PYGcolorfulZus{}arg} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}ANY mode of let\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{});}
          \PYGcolorful{c+c1}{// but cells are ok, too}
          \PYGcolorful{n}{sig\PYGcolorfulZus{}tag} \PYGcolorful{o}{=} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{;}
          \PYGcolorful{n}{signature\PYGcolorfulZus{}arg} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}any}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{signature\PYGcolorfulZus{}args}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{c+c1}{// any number of arguments allowed}
        \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{argi}\PYGcolorful{p}{].}\PYGcolorful{n}{cell} \PYGcolorful{o}{=} \PYGcolorful{n}{arg}\PYGcolorful{p}{;}
        \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{argi}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{=} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}STACK}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{sig\PYGcolorfulZus{}tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}LAMBDA}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{c+c1}{// lazy evaluation by form}
        \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{argi}\PYGcolorful{p}{].}\PYGcolorful{n}{cell} \PYGcolorful{o}{=} \PYGcolorful{n}{arg}\PYGcolorful{p}{;}
        \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{argi}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{=} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}LAMBDA}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}CONS}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{c+c1}{// eager evaluation}
        \PYGcolorful{c+c1}{// nested expression}
        \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{cons\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{compile\PYGcolorfulZus{}expr}\PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{,} \PYGcolorful{n}{frame}\PYGcolorful{p}{,} \PYGcolorful{n}{signature\PYGcolorfulZus{}arg}\PYGcolorful{p}{);}
        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{cons\PYGcolorfulZus{}type}\PYGcolorful{p}{)} \PYGcolorful{k}{return} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{;} \PYGcolorful{c+c1}{// failure}
        \PYGcolorful{n}{given\PYGcolorfulZus{}tag} \PYGcolorful{o}{=} \PYGcolorful{n}{cons\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag}\PYGcolorful{p}{;}

        \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{argi}\PYGcolorful{p}{].}\PYGcolorful{n}{cell} \PYGcolorful{o}{=} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{;} \PYGcolorful{c+c1}{// cell is in R0 at runtime}
        \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{argi}\PYGcolorful{p}{].}\PYGcolorful{n}{slot} \PYGcolorful{o}{=} \PYGcolorful{o}{++}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{sp}\PYGcolorful{p}{;} \PYGcolorful{c+c1}{// record sp at this point}

        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{given\PYGcolorfulZus{}tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}INT}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{argi}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{=} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}STACK\PYGcolorfulZus{}INT}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{argi}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{=} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}STACK}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}

        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{given\PYGcolorfulZus{}tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}STRUCT}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{c+c1}{// struct extraction}
          \PYGcolorful{n}{Cell}\PYGcolorful{o}{**} \PYGcolorful{n}{fields} \PYGcolorful{o}{=} \PYGcolorful{n}{cons\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{;}
          \PYGcolorful{n}{Cell}\PYGcolorful{o}{**} \PYGcolorful{n}{def\PYGcolorfulZus{}fields} \PYGcolorful{o}{=} \PYGcolorful{n}{fields}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{]}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{;}
          \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{argi}\PYGcolorful{p}{].}\PYGcolorful{n}{type\PYGcolorfulZus{}name} \PYGcolorful{o}{=} \PYGcolorful{n}{def\PYGcolorfulZus{}fields}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{]}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{;}
          \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}!!! nested struct name extracted: \PYGcolorfulZpc{}s (arg\PYGcolorfulZsh{} \PYGcolorfulZpc{}d argt \PYGcolorfulZpc{}d) !!!\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},argdefs[argi].type\PYGcolorfulZus{}name,argi,argdefs[argi].type);}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}

        \PYGcolorful{n}{jit\PYGcolorfulZus{}push}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
        \PYGcolorful{n}{args\PYGcolorfulZus{}pushed}\PYGcolorful{o}{++}\PYGcolorful{p}{;}

      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{given\PYGcolorfulZus{}tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}SYM} \PYGcolorful{o}{\PYGcolorfulZam{}\PYGcolorfulZam{}} \PYGcolorful{n}{sig\PYGcolorfulZus{}tag} \PYGcolorful{o}{!=} \PYGcolorful{n}{TAG\PYGcolorfulZus{}SYM}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{c+c1}{// symbol given, lookup (indirect)}
        \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}indirect symbol lookup (name: \PYGcolorfulZpc{}p)\PYGcolorfulZbs{}n\PYGcolorfulZdq{},arg\PYGcolorfulZhy{}\PYGcolorfulZgt{}ar.value);}

        \PYGcolorful{k+kt}{int} \PYGcolorful{n}{arg\PYGcolorfulZus{}frame\PYGcolorfulZus{}idx} \PYGcolorful{o}{=} \PYGcolorful{n}{get\PYGcolorfulZus{}sym\PYGcolorfulZus{}frame\PYGcolorfulZus{}idx}\PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{,} \PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}

        \PYGcolorful{c+c1}{// argument passed to function in register}
        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{arg\PYGcolorfulZus{}frame\PYGcolorfulZus{}idx}\PYGcolorful{o}{\PYGcolorfulZgt{}=}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{argi}\PYGcolorful{p}{]} \PYGcolorful{o}{=} \PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{arg\PYGcolorfulZus{}frame\PYGcolorfulZus{}idx}\PYGcolorful{p}{];}

          \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}argument \PYGcolorfulZpc{}s from stack frame.\PYGcolorfulZbs{}n\PYGcolorfulZdq{}, arg\PYGcolorfulZhy{}\PYGcolorfulZgt{}ar.addr);}
          \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}\PYGcolorfulZhy{}\PYGcolorfulZgt{} cell \PYGcolorfulZpc{}p slot \PYGcolorfulZpc{}d type \PYGcolorfulZpc{}d\PYGcolorfulZbs{}n\PYGcolorfulZdq{}, fn\PYGcolorfulZus{}frame[arg\PYGcolorfulZus{}frame\PYGcolorfulZus{}idx].cell, fn\PYGcolorfulZus{}frame[arg\PYGcolorfulZus{}frame\PYGcolorfulZus{}idx].slot, fn\PYGcolorfulZus{}frame[arg\PYGcolorfulZus{}frame\PYGcolorfulZus{}idx].type);}
        \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{argi}\PYGcolorful{p}{].}\PYGcolorful{n}{env} \PYGcolorful{o}{=} \PYGcolorful{n}{lookup\PYGcolorfulZus{}global\PYGcolorfulZus{}symbol}\PYGcolorful{p}{((}\PYGcolorful{k+kt}{char}\PYGcolorful{o}{*}\PYGcolorful{p}{)}\PYGcolorful{n}{arg}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{);}
          \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{argi}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{=} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}ENV}\PYGcolorful{p}{;}

          \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}argument \PYGcolorfulZpc{}i:\PYGcolorfulZpc{}s from environment.\PYGcolorfulZbs{}n\PYGcolorfulZdq{}, argi, arg\PYGcolorfulZhy{}\PYGcolorfulZgt{}ar.addr);}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}
        \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}arg\PYGcolorfulZus{}frame\PYGcolorfulZus{}idx: \PYGcolorfulZpc{}d\PYGcolorfulZbs{}n\PYGcolorfulZdq{},arg\PYGcolorfulZus{}frame\PYGcolorfulZus{}idx);}

        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{argi}\PYGcolorful{p}{].}\PYGcolorful{n}{env} \PYGcolorful{o}{\PYGcolorfulZam{}\PYGcolorfulZam{}} \PYGcolorful{n}{arg\PYGcolorfulZus{}frame\PYGcolorfulZus{}idx}\PYGcolorful{o}{\PYGcolorfulZlt{}}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}undefined symbol \PYGcolorfulZpc{}s given for argument \PYGcolorfulZpc{}s of \PYGcolorfulZpc{}s\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,(}\PYGcolorful{k+kt}{char}\PYGcolorful{o}{*}\PYGcolorful{p}{)}\PYGcolorful{n}{arg}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{,}\PYGcolorful{n}{arg\PYGcolorfulZus{}name}\PYGcolorful{p}{,}\PYGcolorful{n}{op\PYGcolorfulZus{}name}\PYGcolorful{p}{);}
          \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{compatible\PYGcolorfulZus{}type}\PYGcolorful{p}{(}\PYGcolorful{n}{given\PYGcolorfulZus{}tag}\PYGcolorful{p}{,} \PYGcolorful{n}{sig\PYGcolorfulZus{}tag}\PYGcolorful{p}{)} \PYGcolorful{o}{||} \PYGcolorful{n}{sig\PYGcolorfulZus{}tag}\PYGcolorful{o}{==}\PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{argi}\PYGcolorful{p}{].}\PYGcolorful{n}{cell} \PYGcolorful{o}{=} \PYGcolorful{n}{arg}\PYGcolorful{p}{;}
        \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{argi}\PYGcolorful{p}{].}\PYGcolorful{n}{slot} \PYGcolorful{o}{=} \PYGcolorful{n}{argi}\PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{;}
        \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{argi}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{=} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}CONST}\PYGcolorful{p}{;}

        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{given\PYGcolorfulZus{}tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}SYM} \PYGcolorful{o}{||} \PYGcolorful{n}{given\PYGcolorfulZus{}tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}CONS} \PYGcolorful{o}{||} \PYGcolorful{n}{given\PYGcolorfulZus{}tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}INT} \PYGcolorful{o}{||} \PYGcolorful{n}{given\PYGcolorfulZus{}tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}STR} \PYGcolorful{o}{||} \PYGcolorful{n}{given\PYGcolorfulZus{}tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}BYTES}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{c+c1}{//argdefs[argi].type = ARGT\PYGcolorfulZus{}CONST;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}
        \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}const arg of type \PYGcolorfulZpc{}d at \PYGcolorfulZpc{}p\PYGcolorfulZbs{}n\PYGcolorfulZdq{},arg\PYGcolorfulZhy{}\PYGcolorfulZgt{}tag,arg);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{c+c1}{// check if we can typecast}
        \PYGcolorful{c+c1}{// else, fail with type error}

        \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}type mismatch for argument \PYGcolorfulZpc{}s of \PYGcolorfulZpc{}s (given \PYGcolorfulZpc{}s, expected \PYGcolorfulZpc{}s)\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{arg\PYGcolorfulZus{}name}\PYGcolorful{p}{,}\PYGcolorful{n}{op\PYGcolorfulZus{}name}\PYGcolorful{p}{,}\PYGcolorful{n}{tag\PYGcolorfulZus{}to\PYGcolorfulZus{}str}\PYGcolorful{p}{(}\PYGcolorful{n}{given\PYGcolorfulZus{}tag}\PYGcolorful{p}{),}\PYGcolorful{n}{tag\PYGcolorfulZus{}to\PYGcolorfulZus{}str}\PYGcolorful{p}{(}\PYGcolorful{n}{sig\PYGcolorfulZus{}tag}\PYGcolorful{p}{));}
        \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{arg} \PYGcolorful{o}{\PYGcolorfulZam{}\PYGcolorfulZam{}} \PYGcolorful{n}{signature\PYGcolorfulZus{}arg}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{c+c1}{// missing arguments}
        \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}argument \PYGcolorfulZpc{}s of \PYGcolorfulZpc{}s missing!\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{arg\PYGcolorfulZus{}name}\PYGcolorful{p}{,}\PYGcolorful{n}{op\PYGcolorfulZus{}name}\PYGcolorful{p}{);}
        \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{arg} \PYGcolorful{o}{\PYGcolorfulZam{}\PYGcolorfulZam{}} \PYGcolorful{o}{!}\PYGcolorful{n}{signature\PYGcolorfulZus{}arg}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{c+c1}{// surplus arguments}
        \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}surplus arguments to \PYGcolorfulZpc{}s!\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{op\PYGcolorfulZus{}name}\PYGcolorful{p}{);}
        \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}

    \PYGcolorful{n}{argi}\PYGcolorful{o}{++}\PYGcolorful{p}{;}
  \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{while} \PYGcolorful{p}{(}\PYGcolorful{n}{argi}\PYGcolorful{o}{\PYGcolorfulZlt{}}\PYGcolorful{n}{MAXARGS} \PYGcolorful{o}{\PYGcolorfulZam{}\PYGcolorfulZam{}} \PYGcolorful{p}{(}\PYGcolorful{n}{args} \PYGcolorful{o}{=} \PYGcolorful{n}{cdr}\PYGcolorful{p}{(}\PYGcolorful{n}{args}\PYGcolorful{p}{))} \PYGcolorful{o}{\PYGcolorfulZam{}\PYGcolorfulZam{}} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{signature\PYGcolorfulZus{}args} \PYGcolorful{o}{||} \PYGcolorful{p}{(}\PYGcolorful{n}{signature\PYGcolorfulZus{}args} \PYGcolorful{o}{=} \PYGcolorful{n}{cdr}\PYGcolorful{p}{(}\PYGcolorful{n}{signature\PYGcolorfulZus{}args}\PYGcolorful{p}{))));}

  \PYGcolorful{c+c1}{// args are prepared, execute op}

  \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{op}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}BUILTIN}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{k}{switch} \PYGcolorful{p}{(}\PYGcolorful{n}{op}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{value}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}BITAND}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}andr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}BITNOT}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}notr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}BITOR}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}orr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}BITXOR}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}xorr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}SHL}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}shlr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}SHR}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}shrr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}ADD}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}addr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}SUB}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}subr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}MUL}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}mulr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}DIV}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}divr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}MOD}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}modr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}GT}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{R3}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}subr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movneg}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{R3}\PYGcolorful{p}{);}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}LT}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{R3}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}subr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movneg}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{R3}\PYGcolorful{p}{);}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}EQ}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{R3}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}cmpr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}moveq}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{R3}\PYGcolorful{p}{);}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
        \PYGcolorful{c+c1}{// int is in R0 already}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}DEF}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{c+c1}{// TODO in the future, we could pre\PYGcolorfulZhy{}allocate symbols}
      \PYGcolorful{c+c1}{// and especially their types based on type inference}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}lea}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{].}\PYGcolorful{n}{cell}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// load symbol address}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR1}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],}\PYGcolorful{n}{frame}\PYGcolorful{p}{);}

      \PYGcolorful{n}{push\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call2}\PYGcolorful{p}{(}\PYGcolorful{n}{insert\PYGcolorfulZus{}global\PYGcolorfulZus{}symbol}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}insert\PYGcolorfulZus{}global\PYGcolorfulZus{}symbol\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{n}{pop\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}LET}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{k+kt}{int} \PYGcolorful{n}{is\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{n}{offset}\PYGcolorful{p}{,} \PYGcolorful{n}{fidx}\PYGcolorful{p}{,} \PYGcolorful{n}{is\PYGcolorfulZus{}reg}\PYGcolorful{p}{;}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}error: let is not allowed on global level, only in fn\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
        \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{n}{is\PYGcolorfulZus{}int} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{n}{is\PYGcolorfulZus{}reg} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{n}{offset} \PYGcolorful{o}{=} \PYGcolorful{n}{MAXARGS} \PYGcolorful{o}{+} \PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{locals}\PYGcolorful{p}{;}
      \PYGcolorful{n}{fidx} \PYGcolorful{o}{=} \PYGcolorful{n}{get\PYGcolorfulZus{}sym\PYGcolorfulZus{}frame\PYGcolorfulZus{}idx}\PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{].}\PYGcolorful{n}{cell}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{,} \PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{fidx} \PYGcolorful{o}{\PYGcolorfulZgt{}=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{c+c1}{// existing stack entry}
        \PYGcolorful{n}{offset} \PYGcolorful{o}{=} \PYGcolorful{n}{fidx}\PYGcolorful{p}{;}
        \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}+\PYGcolorfulZti{} frame entry \PYGcolorfulZpc{}s, existing stack\PYGcolorfulZhy{}local idx \PYGcolorfulZpc{}d (type \PYGcolorfulZpc{}d)\PYGcolorfulZbs{}n\PYGcolorfulZdq{},fn\PYGcolorfulZus{}frame[offset].name,fn\PYGcolorfulZus{}frame[offset].slot,fn\PYGcolorfulZus{}frame[offset].type);}

        \PYGcolorful{c+c1}{// is\PYGcolorfulZus{}int from existing entry}
        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{offset}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}REG\PYGcolorfulZus{}INT} \PYGcolorful{o}{||}
            \PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{offset}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}STACK\PYGcolorfulZus{}INT}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{is\PYGcolorfulZus{}int} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}

        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{offset}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}REG\PYGcolorfulZus{}INT} \PYGcolorful{o}{||}
            \PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{offset}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}REG}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{is\PYGcolorfulZus{}reg} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}} 

      \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{k}{if} \PYGcolorful{p}{((}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}REG\PYGcolorfulZus{}INT} \PYGcolorful{o}{||}
           \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}STACK\PYGcolorfulZus{}INT} \PYGcolorful{o}{||}
           \PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}CONST} \PYGcolorful{o}{\PYGcolorfulZam{}\PYGcolorfulZam{}} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{].}\PYGcolorful{n}{cell}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}INT}\PYGcolorful{p}{)}
         \PYGcolorful{p}{))} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{is\PYGcolorfulZus{}int} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}

        \PYGcolorful{c+c1}{// create new stack entry for this let}
        \PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{offset}\PYGcolorful{p}{].}\PYGcolorful{n}{name} \PYGcolorful{o}{=} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{].}\PYGcolorful{n}{cell}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{;}
        \PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{offset}\PYGcolorful{p}{].}\PYGcolorful{n}{type\PYGcolorfulZus{}name} \PYGcolorful{o}{=} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{].}\PYGcolorful{n}{type\PYGcolorfulZus{}name}\PYGcolorful{p}{;} \PYGcolorful{c+c1}{// copy inferred type}
        \PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{offset}\PYGcolorful{p}{].}\PYGcolorful{n}{cell} \PYGcolorful{o}{=} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{;}
        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{is\PYGcolorfulZus{}int}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{offset}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{=} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}STACK\PYGcolorfulZus{}INT}\PYGcolorful{p}{;}
          \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}new let \PYGcolorfulZpc{}s inferred INT\PYGcolorfulZbs{}n\PYGcolorfulZdq{},argdefs[0].cell\PYGcolorfulZhy{}\PYGcolorfulZgt{}ar.addr);}
        \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{offset}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{=} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}STACK}\PYGcolorful{p}{;}
          \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}new let \PYGcolorfulZpc{}s inferred ANY\PYGcolorfulZbs{}n\PYGcolorfulZdq{},argdefs[0].cell\PYGcolorfulZhy{}\PYGcolorfulZgt{}ar.addr);}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}
        \PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{offset}\PYGcolorful{p}{].}\PYGcolorful{n}{slot} \PYGcolorful{o}{=} \PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{locals}\PYGcolorful{p}{;}

\PYGcolorful{c+cp}{\PYGcolorfulZsh{}ifdef DEBUG\PYGcolorfulZus{}ASM\PYGcolorfulZus{}SRC}
        \PYGcolorful{n}{debug\PYGcolorfulZus{}buf} \PYGcolorful{o}{=} \PYGcolorful{n}{malloc}\PYGcolorful{p}{(}\PYGcolorful{l+m+mi}{256}\PYGcolorful{p}{);}
        \PYGcolorful{n}{snprintf}\PYGcolorful{p}{(}\PYGcolorful{n}{debug\PYGcolorfulZus{}buf}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{255}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}++ frame entry \PYGcolorfulZpc{}s, new stack\PYGcolorfulZhy{}local idx \PYGcolorfulZpc{}d, is\PYGcolorfulZus{}int \PYGcolorfulZpc{}d}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{offset}\PYGcolorful{p}{].}\PYGcolorful{n}{name}\PYGcolorful{p}{,}\PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{offset}\PYGcolorful{p}{].}\PYGcolorful{n}{slot}\PYGcolorful{p}{,}\PYGcolorful{n}{is\PYGcolorfulZus{}int}\PYGcolorful{p}{);}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}comment}\PYGcolorful{p}{(}\PYGcolorful{n}{debug\PYGcolorfulZus{}buf}\PYGcolorful{p}{);}
        \PYGcolorful{n}{free}\PYGcolorful{p}{(}\PYGcolorful{n}{debug\PYGcolorfulZus{}buf}\PYGcolorful{p}{);}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}endif}

        \PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{locals}\PYGcolorful{o}{++}\PYGcolorful{p}{;}
        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{locals}\PYGcolorful{o}{+}\PYGcolorful{n}{MAXARGS}\PYGcolorful{o}{\PYGcolorfulZgt{}=}\PYGcolorful{n}{MAXFRAME}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}error: too many locals (maximum \PYGcolorfulZpc{}d)\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{MAXFRAME}\PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{n}{MAXARGS}\PYGcolorful{p}{);}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{is\PYGcolorfulZus{}int}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}comment}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}(let) load int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
        \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}comment}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}(let) load cell\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
        \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}any}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{is\PYGcolorfulZus{}reg}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}comment}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}(let) store to stack\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}str\PYGcolorfulZus{}stack}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{PTRSZ}\PYGcolorful{o}{*}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{sp}\PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{offset}\PYGcolorful{p}{].}\PYGcolorful{n}{slot}\PYGcolorful{p}{));}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{is\PYGcolorfulZus{}reg}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}ifdef DEBUG\PYGcolorfulZus{}ASM\PYGcolorfulZus{}SRC}
        \PYGcolorful{n}{debug\PYGcolorfulZus{}buf} \PYGcolorful{o}{=} \PYGcolorful{n}{malloc}\PYGcolorful{p}{(}\PYGcolorful{l+m+mi}{256}\PYGcolorful{p}{);}
        \PYGcolorful{n}{snprintf}\PYGcolorful{p}{(}\PYGcolorful{n}{debug\PYGcolorfulZus{}buf}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{255}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}(let) store \PYGcolorfulZpc{}s to reg \PYGcolorfulZpc{}d\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{offset}\PYGcolorful{p}{].}\PYGcolorful{n}{name}\PYGcolorful{p}{,}\PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{offset}\PYGcolorful{p}{].}\PYGcolorful{n}{slot}\PYGcolorful{p}{);}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}comment}\PYGcolorful{p}{(}\PYGcolorful{n}{debug\PYGcolorfulZus{}buf}\PYGcolorful{p}{);}
        \PYGcolorful{n}{free}\PYGcolorful{p}{(}\PYGcolorful{n}{debug\PYGcolorfulZus{}buf}\PYGcolorful{p}{);}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}endif}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{fn\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{offset}\PYGcolorful{p}{].}\PYGcolorful{n}{slot}\PYGcolorful{p}{,} \PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{compiled\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}INT} \PYGcolorful{o}{\PYGcolorfulZam{}\PYGcolorfulZam{}} \PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}comment}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}(let) box int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}any}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}FN}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{fn\PYGcolorfulZus{}body}\PYGcolorful{p}{,} \PYGcolorful{o}{*}\PYGcolorful{n}{fn\PYGcolorfulZus{}args}\PYGcolorful{p}{,} \PYGcolorful{o}{*}\PYGcolorful{n}{lambda}\PYGcolorful{p}{;}
      \PYGcolorful{n}{Arg} \PYGcolorful{n}{fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{MAXFRAME}\PYGcolorful{p}{];}
      \PYGcolorful{k+kt}{int} \PYGcolorful{n}{num\PYGcolorfulZus{}lets}\PYGcolorful{p}{,} \PYGcolorful{n}{i}\PYGcolorful{p}{,} \PYGcolorful{n}{j}\PYGcolorful{p}{,} \PYGcolorful{n}{spo\PYGcolorfulZus{}count}\PYGcolorful{p}{,} \PYGcolorful{n}{fn\PYGcolorfulZus{}argc}\PYGcolorful{p}{;}
      \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{compiled\PYGcolorfulZus{}type}\PYGcolorful{p}{;}
      \PYGcolorful{k+kt}{char} \PYGcolorful{n}{label\PYGcolorfulZus{}fn}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{64}\PYGcolorful{p}{];}
      \PYGcolorful{k+kt}{char} \PYGcolorful{n}{label\PYGcolorfulZus{}fe}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{64}\PYGcolorful{p}{];}

      \PYGcolorful{n}{Frame}\PYGcolorful{o}{*} \PYGcolorful{n}{nframe\PYGcolorfulZus{}ptr}\PYGcolorful{p}{;}
      \PYGcolorful{n}{Frame} \PYGcolorful{n}{nframe} \PYGcolorful{o}{=} \PYGcolorful{p}{\PYGcolorfulZob{}}\PYGcolorful{n}{fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{,} \PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{stack\PYGcolorfulZus{}end}\PYGcolorful{p}{\PYGcolorfulZcb{};}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}if CPU\PYGcolorfulZus{}ARM||\PYGcolorfulZus{}\PYGcolorfulZus{}AMIGA||CPU\PYGcolorfulZus{}X86}
      \PYGcolorful{n}{Label}\PYGcolorful{o}{*} \PYGcolorful{n}{fn\PYGcolorfulZus{}lbl}\PYGcolorful{p}{;}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}endif}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{argi}\PYGcolorful{o}{\PYGcolorfulZlt{}}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}error: trying to define fn without body.}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
        \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{c+c1}{// body}
      \PYGcolorful{n}{fn\PYGcolorfulZus{}body} \PYGcolorful{o}{=} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{argi}\PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{].}\PYGcolorful{n}{cell}\PYGcolorful{p}{;}

      \PYGcolorful{c+c1}{// estimate stack space for locals}
      \PYGcolorful{n}{num\PYGcolorfulZus{}lets} \PYGcolorful{o}{=} \PYGcolorful{n}{analyze\PYGcolorfulZus{}fn}\PYGcolorful{p}{(}\PYGcolorful{n}{fn\PYGcolorfulZus{}body}\PYGcolorful{p}{,}\PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}

      \PYGcolorful{c+c1}{// scan args (build signature)}
      \PYGcolorful{n}{fn\PYGcolorfulZus{}args} \PYGcolorful{o}{=} \PYGcolorful{n}{alloc\PYGcolorfulZus{}nil}\PYGcolorful{p}{();}

      \PYGcolorful{k}{for} \PYGcolorful{p}{(}\PYGcolorful{n}{i}\PYGcolorful{o}{=}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;} \PYGcolorful{n}{i}\PYGcolorful{o}{\PYGcolorfulZlt{}}\PYGcolorful{n}{MAXFRAME}\PYGcolorful{p}{;} \PYGcolorful{n}{i}\PYGcolorful{o}{++}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{i}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
        \PYGcolorful{n}{fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{i}\PYGcolorful{p}{].}\PYGcolorful{n}{slot} \PYGcolorful{o}{=} \PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{;}
        \PYGcolorful{n}{fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{i}\PYGcolorful{p}{].}\PYGcolorful{n}{name} \PYGcolorful{o}{=} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{n}{spo\PYGcolorfulZus{}count} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}

      \PYGcolorful{n}{fn\PYGcolorfulZus{}argc} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{k}{for} \PYGcolorful{p}{(}\PYGcolorful{n}{j}\PYGcolorful{o}{=}\PYGcolorful{n}{argi}\PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{l+m+mi}{3}\PYGcolorful{p}{;} \PYGcolorful{n}{j}\PYGcolorful{o}{\PYGcolorfulZgt{}=}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;} \PYGcolorful{n}{j}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZhy{}}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{arg}\PYGcolorful{p}{;}
        \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{arg\PYGcolorfulZus{}prototype} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}any}\PYGcolorful{p}{;}
        \PYGcolorful{n}{fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
        \PYGcolorful{n}{fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{name} \PYGcolorful{o}{=} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{;}
        \PYGcolorful{n}{fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{type\PYGcolorfulZus{}name} \PYGcolorful{o}{=} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{;}

        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{j}\PYGcolorful{o}{\PYGcolorfulZgt{}=}\PYGcolorful{n}{ARG\PYGcolorfulZus{}SPILLOVER}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}} \PYGcolorful{c+c1}{// max args passed in registers}
          \PYGcolorful{n}{fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{=} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}STACK}\PYGcolorful{p}{;}
          \PYGcolorful{n}{fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{slot} \PYGcolorful{o}{=} \PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{n}{num\PYGcolorfulZus{}lets} \PYGcolorful{o}{\PYGcolorfulZhy{}} \PYGcolorful{p}{(}\PYGcolorful{n}{j} \PYGcolorful{o}{\PYGcolorfulZhy{}} \PYGcolorful{n}{ARG\PYGcolorfulZus{}SPILLOVER}\PYGcolorful{p}{)} \PYGcolorful{o}{\PYGcolorfulZhy{}} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{;}
          \PYGcolorful{n}{spo\PYGcolorfulZus{}count}\PYGcolorful{o}{++}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}
        \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{=} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}REG}\PYGcolorful{p}{;}
          \PYGcolorful{n}{fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{slot} \PYGcolorful{o}{=} \PYGcolorful{n}{j} \PYGcolorful{o}{+} \PYGcolorful{n}{LBDREG}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}

        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{cell}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}SYM}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{name} \PYGcolorful{o}{=} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{cell}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{cell}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}CONS}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{env\PYGcolorfulZus{}entry}\PYGcolorful{o}{*} \PYGcolorful{n}{type\PYGcolorfulZus{}env} \PYGcolorful{o}{=} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{;}
          \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{type\PYGcolorfulZus{}cell} \PYGcolorful{o}{=} \PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{cdr}\PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{cell}\PYGcolorful{p}{));}

          \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{type\PYGcolorfulZus{}cell}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
            \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}missing struct\PYGcolorfulZhy{}name in (arg\PYGcolorfulZhy{}name struct\PYGcolorfulZhy{}name) declaration\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
            \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
          \PYGcolorful{p}{\PYGcolorfulZcb{}}
          \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{type\PYGcolorfulZus{}cell}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag}\PYGcolorful{o}{!=}\PYGcolorful{n}{TAG\PYGcolorfulZus{}SYM}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
            \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}non\PYGcolorfulZhy{}symbol struct\PYGcolorfulZhy{}name in (arg\PYGcolorfulZhy{}name struct\PYGcolorfulZhy{}name) declaration\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
            \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
          \PYGcolorful{p}{\PYGcolorfulZcb{}}
          \PYGcolorful{n}{fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{name} \PYGcolorful{o}{=} \PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{cell}\PYGcolorful{p}{)}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{;}
          \PYGcolorful{n}{fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{type\PYGcolorfulZus{}name} \PYGcolorful{o}{=} \PYGcolorful{n}{type\PYGcolorfulZus{}cell}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{;}

          \PYGcolorful{n}{type\PYGcolorfulZus{}env} \PYGcolorful{o}{=} \PYGcolorful{n}{lookup\PYGcolorfulZus{}global\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{type\PYGcolorfulZus{}name}\PYGcolorful{p}{);}
          \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{type\PYGcolorfulZus{}env} \PYGcolorful{o}{||} \PYGcolorful{o}{!}\PYGcolorful{n}{type\PYGcolorfulZus{}env}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{cell}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
            \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}undefined struct\PYGcolorfulZhy{}name \PYGcolorfulZpc{}s in (arg\PYGcolorfulZhy{}name struct\PYGcolorfulZhy{}name) declaration\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{type\PYGcolorfulZus{}name}\PYGcolorful{p}{);}
            \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
          \PYGcolorful{p}{\PYGcolorfulZcb{}}
          \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{type\PYGcolorfulZus{}env}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{cell}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag}\PYGcolorful{o}{!=}\PYGcolorful{n}{TAG\PYGcolorfulZus{}STRUCT\PYGcolorfulZus{}DEF}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
            \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}struct\PYGcolorfulZhy{}name \PYGcolorfulZpc{}s in (arg\PYGcolorfulZhy{}name struct\PYGcolorfulZhy{}name) declaration does not resolve to a struct definition\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{type\PYGcolorfulZus{}name}\PYGcolorful{p}{);}
            \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
          \PYGcolorful{p}{\PYGcolorfulZcb{}}

          \PYGcolorful{c+c1}{// TODO other types!}
          \PYGcolorful{n}{arg\PYGcolorfulZus{}prototype} \PYGcolorful{o}{=} \PYGcolorful{n}{type\PYGcolorfulZus{}env}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{cell}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{c+c1}{// illegal type}
          \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}error: only symbols or (symbol typename) allowed in fn signature\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
          \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}

        \PYGcolorful{n}{arg} \PYGcolorful{o}{=} \PYGcolorful{n}{alloc\PYGcolorfulZus{}cons}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{n}{fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{name}\PYGcolorful{p}{),}\PYGcolorful{n}{arg\PYGcolorfulZus{}prototype}\PYGcolorful{p}{);}
        \PYGcolorful{n}{fn\PYGcolorfulZus{}args} \PYGcolorful{o}{=} \PYGcolorful{n}{alloc\PYGcolorfulZus{}cons}\PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{,}\PYGcolorful{n}{fn\PYGcolorfulZus{}args}\PYGcolorful{p}{);}
        \PYGcolorful{n}{fn\PYGcolorfulZus{}argc}\PYGcolorful{o}{++}\PYGcolorful{p}{;}

        \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}arg j \PYGcolorfulZpc{}d: \PYGcolorfulZpc{}s\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},j,fn\PYGcolorfulZus{}new\PYGcolorfulZus{}frame[j].name);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{c+c1}{//char sig\PYGcolorfulZus{}debug[128];}
      \PYGcolorful{c+c1}{//lisp\PYGcolorfulZus{}write(fn\PYGcolorfulZus{}args, sig\PYGcolorfulZus{}debug, sizeof(sig\PYGcolorfulZus{}debug));}
      \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}signature: \PYGcolorfulZpc{}s\PYGcolorfulZbs{}n\PYGcolorfulZdq{},sig\PYGcolorfulZus{}debug);}


      \PYGcolorful{c+c1}{//lisp\PYGcolorfulZus{}write(fn\PYGcolorfulZus{}body, sig\PYGcolorfulZus{}debug, sizeof(sig\PYGcolorfulZus{}debug));}

      \PYGcolorful{n}{lambda} \PYGcolorful{o}{=} \PYGcolorful{n}{alloc\PYGcolorfulZus{}lambda}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}cons}\PYGcolorful{p}{(}\PYGcolorful{n}{fn\PYGcolorfulZus{}args}\PYGcolorful{p}{,}\PYGcolorful{n}{fn\PYGcolorfulZus{}body}\PYGcolorful{p}{));}
      \PYGcolorful{n}{lambda}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{dr}\PYGcolorful{p}{.}\PYGcolorful{n}{next} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}

      \PYGcolorful{n}{sprintf}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}fn}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}L0\PYGcolorfulZus{}\PYGcolorfulZpc{}p\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{lambda}\PYGcolorful{p}{);}
      \PYGcolorful{n}{sprintf}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}fe}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}L1\PYGcolorfulZus{}\PYGcolorfulZpc{}p\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{lambda}\PYGcolorful{p}{);}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}jmp}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}fe}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}label}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}fn}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,(}\PYGcolorful{n}{jit\PYGcolorfulZus{}word\PYGcolorfulZus{}t}\PYGcolorful{p}{)}\PYGcolorful{n}{lambda}\PYGcolorful{o}{|}\PYGcolorful{n}{STACK\PYGcolorfulZus{}FRAME\PYGcolorfulZus{}MARKER}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}push}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}dec\PYGcolorfulZus{}stack}\PYGcolorful{p}{(}\PYGcolorful{n}{num\PYGcolorfulZus{}lets}\PYGcolorful{o}{*}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{debug\PYGcolorfulZus{}mode}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{Arg}\PYGcolorful{o}{*} \PYGcolorful{n}{nargs\PYGcolorfulZus{}ptr}\PYGcolorful{p}{;}

        \PYGcolorful{c+c1}{// in debug mode, we need a copy of the frame definition at runtime}
        \PYGcolorful{n}{nframe\PYGcolorfulZus{}ptr} \PYGcolorful{o}{=} \PYGcolorful{n}{malloc}\PYGcolorful{p}{(}\PYGcolorful{k}{sizeof}\PYGcolorful{p}{(}\PYGcolorful{n}{Frame}\PYGcolorful{p}{));}
        \PYGcolorful{n}{memcpy}\PYGcolorful{p}{(}\PYGcolorful{n}{nframe\PYGcolorfulZus{}ptr}\PYGcolorful{p}{,} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{nframe}\PYGcolorful{p}{,} \PYGcolorful{k}{sizeof}\PYGcolorful{p}{(}\PYGcolorful{n}{Frame}\PYGcolorful{p}{));}
        \PYGcolorful{n}{nargs\PYGcolorfulZus{}ptr} \PYGcolorful{o}{=} \PYGcolorful{n}{malloc}\PYGcolorful{p}{(}\PYGcolorful{k}{sizeof}\PYGcolorful{p}{(}\PYGcolorful{n}{Arg}\PYGcolorful{p}{)}\PYGcolorful{o}{*}\PYGcolorful{n}{MAXFRAME}\PYGcolorful{p}{);}
        \PYGcolorful{n}{memcpy}\PYGcolorful{p}{(}\PYGcolorful{n}{nargs\PYGcolorfulZus{}ptr}\PYGcolorful{p}{,} \PYGcolorful{n}{nframe}\PYGcolorful{p}{.}\PYGcolorful{n}{f}\PYGcolorful{p}{,} \PYGcolorful{k}{sizeof}\PYGcolorful{p}{(}\PYGcolorful{n}{Arg}\PYGcolorful{p}{)}\PYGcolorful{o}{*}\PYGcolorful{n}{MAXFRAME}\PYGcolorful{p}{);}
        \PYGcolorful{n}{nframe\PYGcolorfulZus{}ptr}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f} \PYGcolorful{o}{=} \PYGcolorful{n}{nargs\PYGcolorfulZus{}ptr}\PYGcolorful{p}{;}

        \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}frame copied: \PYGcolorfulZpc{}p args: \PYGcolorfulZpc{}p\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},nframe\PYGcolorfulZus{}ptr,nframe\PYGcolorfulZus{}ptr\PYGcolorfulZhy{}\PYGcolorfulZgt{}f);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{nframe\PYGcolorfulZus{}ptr} \PYGcolorful{o}{=} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{nframe}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{c+c1}{//nframe\PYGcolorfulZus{}ptr\PYGcolorfulZhy{}\PYGcolorfulZgt{}parent\PYGcolorfulZus{}frame = frame;}

      \PYGcolorful{c+c1}{// TODO here we can introduce function return types}
      \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{compile\PYGcolorfulZus{}expr}\PYGcolorful{p}{(}\PYGcolorful{n}{fn\PYGcolorfulZus{}body}\PYGcolorful{p}{,} \PYGcolorful{n}{nframe\PYGcolorfulZus{}ptr}\PYGcolorful{p}{,} \PYGcolorful{n}{prototype\PYGcolorfulZus{}any}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// new frame, fresh sp}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{compiled\PYGcolorfulZus{}type}\PYGcolorful{p}{)} \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}

      \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}\PYGcolorfulZgt{}\PYGcolorfulZgt{} fn has \PYGcolorfulZpc{}d args and \PYGcolorfulZpc{}d locals. predicted locals: \PYGcolorfulZpc{}d\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},fn\PYGcolorfulZus{}argc,nframe.locals,num\PYGcolorfulZus{}lets);}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}inc\PYGcolorfulZus{}stack}\PYGcolorful{p}{(}\PYGcolorful{n}{num\PYGcolorfulZus{}lets}\PYGcolorful{o}{*}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}inc\PYGcolorfulZus{}stack}\PYGcolorful{p}{(}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ret}\PYGcolorful{p}{();}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}label}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}fe}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}lea}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{lambda}\PYGcolorful{p}{);}

\PYGcolorful{c+cp}{\PYGcolorfulZsh{}if CPU\PYGcolorfulZus{}ARM||\PYGcolorfulZus{}\PYGcolorfulZus{}AMIGA||CPU\PYGcolorfulZus{}X86}
      \PYGcolorful{n}{fn\PYGcolorfulZus{}lbl} \PYGcolorful{o}{=} \PYGcolorful{n}{find\PYGcolorfulZus{}label}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}fn}\PYGcolorful{p}{);}
      \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}fn\PYGcolorfulZus{}lbl idx: \PYGcolorfulZpc{}d code: \PYGcolorfulZpc{}p\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},fn\PYGcolorfulZus{}lbl\PYGcolorfulZhy{}\PYGcolorfulZgt{}idx,code);}
      \PYGcolorful{n}{lambda}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{dr}\PYGcolorful{p}{.}\PYGcolorful{n}{next} \PYGcolorful{o}{=} \PYGcolorful{n}{code} \PYGcolorful{o}{+} \PYGcolorful{n}{fn\PYGcolorfulZus{}lbl}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{idx}\PYGcolorful{p}{;}
      \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}fn\PYGcolorfulZus{}lbl next: \PYGcolorfulZpc{}p\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},lambda\PYGcolorfulZhy{}\PYGcolorfulZgt{}dr.next);}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}endif}

      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}IF}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{then\PYGcolorfulZus{}type}\PYGcolorful{o}{=}\PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{;}
      \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{else\PYGcolorfulZus{}type}\PYGcolorful{o}{=}\PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{;}
      \PYGcolorful{k+kt}{char} \PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{64}\PYGcolorful{p}{];}
      \PYGcolorful{n}{sprintf}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}Lelse\PYGcolorfulZus{}\PYGcolorfulZpc{}d\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{o}{++}\PYGcolorful{n}{label\PYGcolorfulZus{}skip\PYGcolorfulZus{}count}\PYGcolorful{p}{);}

      \PYGcolorful{c+c1}{// load the condition}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}

      \PYGcolorful{c+c1}{// compare to zero}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}cmpi}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}je}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{);}

      \PYGcolorful{c+c1}{// then}
      \PYGcolorful{n}{then\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{compile\PYGcolorfulZus{}expr}\PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{].}\PYGcolorful{n}{cell}\PYGcolorful{p}{,} \PYGcolorful{n}{frame}\PYGcolorful{p}{,} \PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{p}{);}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{then\PYGcolorfulZus{}type}\PYGcolorful{p}{)} \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}

      \PYGcolorful{c+c1}{// else}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{].}\PYGcolorful{n}{cell}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{k+kt}{char} \PYGcolorful{n}{label\PYGcolorfulZus{}end}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{64}\PYGcolorful{p}{];}
        \PYGcolorful{n}{sprintf}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}end}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}Lendif\PYGcolorfulZus{}\PYGcolorfulZpc{}d\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{o}{++}\PYGcolorful{n}{label\PYGcolorfulZus{}skip\PYGcolorfulZus{}count}\PYGcolorful{p}{);}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}jmp}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}end}\PYGcolorful{p}{);}

        \PYGcolorful{n}{jit\PYGcolorfulZus{}label}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{);}
        \PYGcolorful{n}{else\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{compile\PYGcolorfulZus{}expr}\PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{].}\PYGcolorful{n}{cell}\PYGcolorful{p}{,} \PYGcolorful{n}{frame}\PYGcolorful{p}{,} \PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{p}{);}
        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{else\PYGcolorfulZus{}type}\PYGcolorful{p}{)} \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}

        \PYGcolorful{n}{jit\PYGcolorfulZus{}label}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}end}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}label}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag}\PYGcolorful{o}{!=}\PYGcolorful{n}{TAG\PYGcolorfulZus{}VOID} \PYGcolorful{o}{\PYGcolorfulZam{}\PYGcolorfulZam{}} \PYGcolorful{n}{then\PYGcolorfulZus{}type} \PYGcolorful{o}{\PYGcolorfulZam{}\PYGcolorfulZam{}} \PYGcolorful{n}{else\PYGcolorfulZus{}type} \PYGcolorful{o}{\PYGcolorfulZam{}\PYGcolorfulZam{}} \PYGcolorful{n}{then\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag}\PYGcolorful{o}{!=}\PYGcolorful{n}{else\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}incompatible then/else types of if: \PYGcolorfulZpc{}s/\PYGcolorfulZpc{}s, return type: \PYGcolorfulZpc{}s\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{tag\PYGcolorfulZus{}to\PYGcolorfulZus{}str}\PYGcolorful{p}{(}\PYGcolorful{n}{then\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag}\PYGcolorful{p}{),}\PYGcolorful{n}{tag\PYGcolorfulZus{}to\PYGcolorfulZus{}str}\PYGcolorful{p}{(}\PYGcolorful{n}{else\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag}\PYGcolorful{p}{),}\PYGcolorful{n}{tag\PYGcolorfulZus{}to\PYGcolorfulZus{}str}\PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag}\PYGcolorful{p}{));}
        \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}WHILE}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{k+kt}{char} \PYGcolorful{n}{label\PYGcolorfulZus{}loop}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{64}\PYGcolorful{p}{];}
      \PYGcolorful{k+kt}{char} \PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{64}\PYGcolorful{p}{];}
      \PYGcolorful{k+kt}{char} \PYGcolorful{n}{label\PYGcolorfulZus{}skip2}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{64}\PYGcolorful{p}{];}
      \PYGcolorful{n}{sprintf}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}loop}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}Lloop\PYGcolorfulZus{}\PYGcolorfulZpc{}d\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{o}{++}\PYGcolorful{n}{label\PYGcolorfulZus{}skip\PYGcolorfulZus{}count}\PYGcolorful{p}{);}
      \PYGcolorful{n}{sprintf}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}Lskip\PYGcolorfulZus{}\PYGcolorfulZpc{}d\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{label\PYGcolorfulZus{}skip\PYGcolorfulZus{}count}\PYGcolorful{p}{);}
      \PYGcolorful{n}{sprintf}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip2}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}Lskip2\PYGcolorfulZus{}\PYGcolorfulZpc{}d\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{label\PYGcolorfulZus{}skip\PYGcolorfulZus{}count}\PYGcolorful{p}{);}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}label}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}loop}\PYGcolorful{p}{);}

      \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{compile\PYGcolorfulZus{}expr}\PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{].}\PYGcolorful{n}{cell}\PYGcolorful{p}{,} \PYGcolorful{n}{frame}\PYGcolorful{p}{,} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{);}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{compiled\PYGcolorfulZus{}type}\PYGcolorful{p}{)} \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}

      \PYGcolorful{c+c1}{// load the condition}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{compiled\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{!=} \PYGcolorful{n}{TAG\PYGcolorfulZus{}INT}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{c+c1}{// compare to zero}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}cmpi}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}je}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{);}

      \PYGcolorful{c+c1}{// while body}
      \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{compile\PYGcolorfulZus{}expr}\PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{].}\PYGcolorful{n}{cell}\PYGcolorful{p}{,} \PYGcolorful{n}{frame}\PYGcolorful{p}{,} \PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{p}{);}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{compiled\PYGcolorfulZus{}type}\PYGcolorful{p}{)} \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}jmp}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}loop}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}label}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{);}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{c+c1}{// if the while never executed, we have to create a zero int cell}
        \PYGcolorful{c+c1}{// from r0}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}cmpi}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}jne}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip2}\PYGcolorful{p}{);}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}label}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip2}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}DO}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{arg}\PYGcolorful{p}{;}
      \PYGcolorful{n}{args} \PYGcolorful{o}{=} \PYGcolorful{n}{orig\PYGcolorfulZus{}args}\PYGcolorful{p}{;}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{args}\PYGcolorful{p}{))} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}empty (do) not allowed\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
        \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{k}{while} \PYGcolorful{p}{((}\PYGcolorful{n}{arg} \PYGcolorful{o}{=} \PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{args}\PYGcolorful{p}{)))} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{compiled\PYGcolorfulZus{}type}\PYGcolorful{p}{;}
        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{cdr}\PYGcolorful{p}{(}\PYGcolorful{n}{args}\PYGcolorful{p}{)))} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{c+c1}{// discard all returns except for the last one}
          \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{compile\PYGcolorfulZus{}expr}\PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{,} \PYGcolorful{n}{frame}\PYGcolorful{p}{,} \PYGcolorful{n}{prototype\PYGcolorfulZus{}void}\PYGcolorful{p}{);}
        \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{compile\PYGcolorfulZus{}expr}\PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{,} \PYGcolorful{n}{frame}\PYGcolorful{p}{,} \PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{p}{);}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}

        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{compiled\PYGcolorfulZus{}type}\PYGcolorful{p}{)} \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
        \PYGcolorful{n}{args} \PYGcolorful{o}{=} \PYGcolorful{n}{cdr}\PYGcolorful{p}{(}\PYGcolorful{n}{args}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}LIST}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{arg}\PYGcolorful{p}{;}
      \PYGcolorful{k+kt}{int} \PYGcolorful{n}{n} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{,} \PYGcolorful{n}{i}\PYGcolorful{p}{;}
      \PYGcolorful{n}{args} \PYGcolorful{o}{=} \PYGcolorful{n}{orig\PYGcolorfulZus{}args}\PYGcolorful{p}{;}
      \PYGcolorful{k}{while} \PYGcolorful{p}{((}\PYGcolorful{n}{arg} \PYGcolorful{o}{=} \PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{args}\PYGcolorful{p}{)))} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{compile\PYGcolorfulZus{}expr}\PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{,} \PYGcolorful{n}{frame}\PYGcolorful{p}{,} \PYGcolorful{n}{prototype\PYGcolorfulZus{}any}\PYGcolorful{p}{);}
        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{compiled\PYGcolorfulZus{}type}\PYGcolorful{p}{)} \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}push}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
        \PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{sp}\PYGcolorful{o}{++}\PYGcolorful{p}{;}
        \PYGcolorful{n}{args} \PYGcolorful{o}{=} \PYGcolorful{n}{cdr}\PYGcolorful{p}{(}\PYGcolorful{n}{args}\PYGcolorful{p}{);}
        \PYGcolorful{n}{n}\PYGcolorful{o}{++}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}nil}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}list:alloc\PYGcolorfulZus{}nil\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR1}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{k}{for} \PYGcolorful{p}{(}\PYGcolorful{n}{i}\PYGcolorful{o}{=}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;} \PYGcolorful{n}{i}\PYGcolorful{o}{\PYGcolorfulZlt{}}\PYGcolorful{n}{n}\PYGcolorful{p}{;} \PYGcolorful{n}{i}\PYGcolorful{o}{++}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}pop}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
        \PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{sp}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZhy{}}\PYGcolorful{p}{;}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}call2}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}cons}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}list:alloc\PYGcolorfulZus{}cons\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR1}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;} \PYGcolorful{c+c1}{// FIXME}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}STRUCT}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{key}\PYGcolorful{p}{;}
      \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{arg}\PYGcolorful{p}{;}
      \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{name\PYGcolorfulZus{}sym}\PYGcolorful{p}{;}
      \PYGcolorful{k+kt}{int} \PYGcolorful{n}{n} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{,} \PYGcolorful{n}{i}\PYGcolorful{p}{;}
      \PYGcolorful{n}{args} \PYGcolorful{o}{=} \PYGcolorful{n}{cdr}\PYGcolorful{p}{(}\PYGcolorful{n}{orig\PYGcolorfulZus{}args}\PYGcolorful{p}{);}
      \PYGcolorful{n}{name\PYGcolorfulZus{}sym} \PYGcolorful{o}{=} \PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{orig\PYGcolorfulZus{}args}\PYGcolorful{p}{);}

      \PYGcolorful{c+c1}{// struct knows its own name}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}lea}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{name\PYGcolorfulZus{}sym}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}push}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}

      \PYGcolorful{k}{while} \PYGcolorful{p}{((}\PYGcolorful{n}{key} \PYGcolorful{o}{=} \PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{args}\PYGcolorful{p}{)))} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{key}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{!=} \PYGcolorful{n}{TAG\PYGcolorfulZus{}SYM}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}every second argument of struct following the struct\PYGcolorfulZsq{}sname has to be a symbol\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
          \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}lea}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{key}\PYGcolorful{p}{);}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}push}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}

        \PYGcolorful{n}{args} \PYGcolorful{o}{=} \PYGcolorful{n}{cdr}\PYGcolorful{p}{(}\PYGcolorful{n}{args}\PYGcolorful{p}{);}
        \PYGcolorful{n}{arg} \PYGcolorful{o}{=} \PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{args}\PYGcolorful{p}{);}
        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{arg}\PYGcolorful{p}{)} \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}

        \PYGcolorful{n}{args} \PYGcolorful{o}{=} \PYGcolorful{n}{cdr}\PYGcolorful{p}{(}\PYGcolorful{n}{args}\PYGcolorful{p}{);}

        \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{compile\PYGcolorfulZus{}expr}\PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{,} \PYGcolorful{n}{frame}\PYGcolorful{p}{,} \PYGcolorful{n}{prototype\PYGcolorfulZus{}any}\PYGcolorful{p}{);}
        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{compiled\PYGcolorfulZus{}type}\PYGcolorful{p}{)} \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}

        \PYGcolorful{n}{jit\PYGcolorfulZus{}push}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
        \PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{sp}\PYGcolorful{o}{+=}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{;}
        \PYGcolorful{n}{n}\PYGcolorful{o}{+=}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{n}{n}\PYGcolorful{o}{++}\PYGcolorful{p}{;} \PYGcolorful{c+c1}{// account for name}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{n}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}struct\PYGcolorfulZus{}def}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}struct:alloc\PYGcolorfulZus{}struct\PYGcolorfulZus{}def\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// load addr of cell array}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}addi}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{n}\PYGcolorful{o}{*}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);}
      \PYGcolorful{k}{for} \PYGcolorful{p}{(}\PYGcolorful{n}{i}\PYGcolorful{o}{=}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;} \PYGcolorful{n}{i}\PYGcolorful{o}{\PYGcolorfulZlt{}}\PYGcolorful{n}{n}\PYGcolorful{p}{;} \PYGcolorful{n}{i}\PYGcolorful{o}{++}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}addi}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}pop}\PYGcolorful{p}{(}\PYGcolorful{n}{R3}\PYGcolorful{p}{,}\PYGcolorful{n}{R3}\PYGcolorful{p}{);}
        \PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{sp}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZhy{}}\PYGcolorful{p}{;}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}stra}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// strw from r3}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{c+c1}{// load the struct name}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}lea}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{name\PYGcolorfulZus{}sym}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR1}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{push\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call2}\PYGcolorful{p}{(}\PYGcolorful{n}{insert\PYGcolorfulZus{}global\PYGcolorfulZus{}symbol}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}insert\PYGcolorfulZus{}global\PYGcolorfulZus{}symbol\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{n}{pop\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}

      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}NEW}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{arg}\PYGcolorful{p}{;}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{orig\PYGcolorfulZus{}op}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{c+c1}{// (struct\PYGcolorfulZhy{}def …)}
        \PYGcolorful{n}{arg} \PYGcolorful{o}{=} \PYGcolorful{n}{orig\PYGcolorfulZus{}op}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{c+c1}{// (new struct\PYGcolorfulZhy{}def …)}
        \PYGcolorful{n}{arg} \PYGcolorful{o}{=} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{].}\PYGcolorful{n}{env}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{cell}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[new] arg: \PYGcolorfulZpc{}p\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},arg);}
      \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[new] struct size \PYGcolorfulZpc{}d\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},arg\PYGcolorfulZhy{}\PYGcolorfulZgt{}dr.size/2);}

      \PYGcolorful{c+c1}{// arg points to struct definition which is TAG\PYGcolorfulZus{}VEC}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{!=} \PYGcolorful{n}{TAG\PYGcolorfulZus{}STRUCT\PYGcolorfulZus{}DEF}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}(new) requires a struct definition\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
        \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}lea}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{arg}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}struct}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}new:alloc\PYGcolorfulZus{}struct\PYGcolorfulZdq{}}\PYGcolorful{p}{);}

      \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{alloc\PYGcolorfulZus{}struct}\PYGcolorful{p}{(}\PYGcolorful{n}{arg}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// prototype}

      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}SGET}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{struct\PYGcolorfulZus{}def}\PYGcolorful{p}{;}
      \PYGcolorful{k+kt}{char}\PYGcolorful{o}{*} \PYGcolorful{n}{lookup\PYGcolorfulZus{}name} \PYGcolorful{o}{=} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{].}\PYGcolorful{n}{cell}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{;}
      \PYGcolorful{n}{Cell}\PYGcolorful{o}{**} \PYGcolorful{n}{struct\PYGcolorfulZus{}elements}\PYGcolorful{p}{;}
      \PYGcolorful{k+kt}{int} \PYGcolorful{n}{num\PYGcolorfulZus{}fields}\PYGcolorful{p}{;}
      \PYGcolorful{k+kt}{int} \PYGcolorful{n}{found}\PYGcolorful{o}{=}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}ENV}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{struct\PYGcolorfulZus{}def} \PYGcolorful{o}{=} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{].}\PYGcolorful{n}{env}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{cell}\PYGcolorful{p}{;}
        \PYGcolorful{n}{struct\PYGcolorfulZus{}def} \PYGcolorful{o}{=} \PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{struct\PYGcolorfulZus{}def}\PYGcolorful{p}{));}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{].}\PYGcolorful{n}{type\PYGcolorfulZus{}name}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[sget] arg type name \PYGcolorfulZpc{}s\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},argdefs[0].type\PYGcolorfulZus{}name);}
        \PYGcolorful{n}{env\PYGcolorfulZus{}entry}\PYGcolorful{o}{*} \PYGcolorful{n}{type\PYGcolorfulZus{}env} \PYGcolorful{o}{=} \PYGcolorful{n}{lookup\PYGcolorfulZus{}global\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{].}\PYGcolorful{n}{type\PYGcolorfulZus{}name}\PYGcolorful{p}{);}

        \PYGcolorful{n}{struct\PYGcolorfulZus{}def} \PYGcolorful{o}{=} \PYGcolorful{n}{type\PYGcolorfulZus{}env}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{cell}\PYGcolorful{p}{;}
        \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[sget] struct\PYGcolorfulZus{}def \PYGcolorfulZpc{}p\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},struct\PYGcolorfulZus{}def);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}untyped value passed to sget (field \PYGcolorfulZpc{}s)\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{lookup\PYGcolorfulZus{}name}\PYGcolorful{p}{);}
        \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{c+c1}{// arg points to struct definition which is TAG\PYGcolorfulZus{}VEC}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{struct\PYGcolorfulZus{}def}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{!=} \PYGcolorful{n}{TAG\PYGcolorfulZus{}STRUCT\PYGcolorfulZus{}DEF}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}(sget) requires a struct\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
        \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{n}{num\PYGcolorfulZus{}fields} \PYGcolorful{o}{=} \PYGcolorful{n}{struct\PYGcolorfulZus{}def}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{dr}\PYGcolorful{p}{.}\PYGcolorful{n}{size}\PYGcolorful{o}{/}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{;}
      \PYGcolorful{n}{struct\PYGcolorfulZus{}elements} \PYGcolorful{o}{=} \PYGcolorful{p}{(}\PYGcolorful{n}{Cell}\PYGcolorful{o}{**}\PYGcolorful{p}{)(}\PYGcolorful{n}{struct\PYGcolorfulZus{}def}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{);}

      \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[sget] struct\PYGcolorfulZus{}elements \PYGcolorfulZpc{}p\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},struct\PYGcolorfulZus{}elements);}
      \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[sget] lookup \PYGcolorfulZpc{}s\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},lookup\PYGcolorfulZus{}name);}

      \PYGcolorful{k}{for} \PYGcolorful{p}{(}\PYGcolorful{k+kt}{int} \PYGcolorful{n}{i}\PYGcolorful{o}{=}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;} \PYGcolorful{n}{i}\PYGcolorful{o}{\PYGcolorfulZlt{}}\PYGcolorful{n}{num\PYGcolorfulZus{}fields}\PYGcolorful{p}{;} \PYGcolorful{n}{i}\PYGcolorful{o}{++}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{strcmp}\PYGcolorful{p}{(}\PYGcolorful{n}{lookup\PYGcolorfulZus{}name}\PYGcolorful{p}{,(}\PYGcolorful{k+kt}{char}\PYGcolorful{o}{*}\PYGcolorful{p}{)}\PYGcolorful{n}{struct\PYGcolorfulZus{}elements}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{o}{+}\PYGcolorful{n}{i}\PYGcolorful{o}{*}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{]}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{))} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}field found at index \PYGcolorfulZpc{}d\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},i);}
          \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],}\PYGcolorful{n}{frame}\PYGcolorful{p}{);}
          \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
          \PYGcolorful{n}{jit\PYGcolorfulZus{}addi}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,(}\PYGcolorful{n}{i}\PYGcolorful{o}{+}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{)}\PYGcolorful{o}{*}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);}
          \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
          \PYGcolorful{n}{found} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{;}

          \PYGcolorful{c+c1}{// extract and return the field type (prototype)}
          \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{struct\PYGcolorfulZus{}elements}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{o}{+}\PYGcolorful{n}{i}\PYGcolorful{o}{*}\PYGcolorful{l+m+mi}{2}\PYGcolorful{o}{+}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{];}
          \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{compiled\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{!=} \PYGcolorful{n}{TAG\PYGcolorfulZus{}STRUCT}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
            \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}any}\PYGcolorful{p}{;} \PYGcolorful{c+c1}{// FIXME}
          \PYGcolorful{p}{\PYGcolorfulZcb{}}

          \PYGcolorful{k}{break}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{found}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}sget field \PYGcolorfulZpc{}s not found!\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{lookup\PYGcolorfulZus{}name}\PYGcolorful{p}{);}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
        \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}SPUT}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{struct\PYGcolorfulZus{}def}\PYGcolorful{p}{;}
      \PYGcolorful{k+kt}{char}\PYGcolorful{o}{*} \PYGcolorful{n}{lookup\PYGcolorfulZus{}name} \PYGcolorful{o}{=} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{].}\PYGcolorful{n}{cell}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{;}
      \PYGcolorful{n}{Cell}\PYGcolorful{o}{**} \PYGcolorful{n}{struct\PYGcolorfulZus{}elements}\PYGcolorful{p}{;}
      \PYGcolorful{k+kt}{int} \PYGcolorful{n}{num\PYGcolorfulZus{}fields}\PYGcolorful{p}{;}
      \PYGcolorful{k+kt}{int} \PYGcolorful{n}{found}\PYGcolorful{o}{=}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}ENV}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{struct\PYGcolorfulZus{}def} \PYGcolorful{o}{=} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{].}\PYGcolorful{n}{env}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{cell}\PYGcolorful{p}{;}
        \PYGcolorful{n}{struct\PYGcolorfulZus{}def} \PYGcolorful{o}{=} \PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{struct\PYGcolorfulZus{}def}\PYGcolorful{p}{));}
      \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{].}\PYGcolorful{n}{type\PYGcolorfulZus{}name}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{env\PYGcolorfulZus{}entry}\PYGcolorful{o}{*} \PYGcolorful{n}{type\PYGcolorfulZus{}env} \PYGcolorful{o}{=} \PYGcolorful{n}{lookup\PYGcolorfulZus{}global\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{].}\PYGcolorful{n}{type\PYGcolorfulZus{}name}\PYGcolorful{p}{);}
        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{type\PYGcolorfulZus{}env}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{struct\PYGcolorfulZus{}def} \PYGcolorful{o}{=} \PYGcolorful{n}{type\PYGcolorfulZus{}env}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{cell}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}sput: struct type \PYGcolorfulZpc{}s not found.\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{].}\PYGcolorful{n}{type\PYGcolorfulZus{}name}\PYGcolorful{p}{);}
          \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}indirect struct field access not yet implemented.\PYGcolorfulZgt{}\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
        \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{c+c1}{// arg points to struct definition which is TAG\PYGcolorfulZus{}VEC}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{struct\PYGcolorfulZus{}def}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{!=} \PYGcolorful{n}{TAG\PYGcolorfulZus{}STRUCT\PYGcolorfulZus{}DEF}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}(sput) requires a struct\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
        \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{n}{num\PYGcolorfulZus{}fields} \PYGcolorful{o}{=} \PYGcolorful{n}{struct\PYGcolorfulZus{}def}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{dr}\PYGcolorful{p}{.}\PYGcolorful{n}{size}\PYGcolorful{o}{/}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{;}
      \PYGcolorful{n}{struct\PYGcolorfulZus{}elements} \PYGcolorful{o}{=} \PYGcolorful{p}{(}\PYGcolorful{n}{Cell}\PYGcolorful{o}{**}\PYGcolorful{p}{)(}\PYGcolorful{n}{struct\PYGcolorfulZus{}def}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{);}
      \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[sput] lookup \PYGcolorfulZpc{}s\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},lookup\PYGcolorfulZus{}name);}

      \PYGcolorful{k}{for} \PYGcolorful{p}{(}\PYGcolorful{k+kt}{int} \PYGcolorful{n}{i}\PYGcolorful{o}{=}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;} \PYGcolorful{n}{i}\PYGcolorful{o}{\PYGcolorfulZlt{}}\PYGcolorful{n}{num\PYGcolorfulZus{}fields}\PYGcolorful{p}{;} \PYGcolorful{n}{i}\PYGcolorful{o}{++}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{strcmp}\PYGcolorful{p}{(}\PYGcolorful{n}{lookup\PYGcolorfulZus{}name}\PYGcolorful{p}{,(}\PYGcolorful{k+kt}{char}\PYGcolorful{o}{*}\PYGcolorful{p}{)}\PYGcolorful{n}{struct\PYGcolorfulZus{}elements}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{o}{+}\PYGcolorful{n}{i}\PYGcolorful{o}{*}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{]}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{ar}\PYGcolorful{p}{.}\PYGcolorful{n}{addr}\PYGcolorful{p}{))} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[sput] field found at index \PYGcolorfulZpc{}d\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{},i);}
          \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],}\PYGcolorful{n}{frame}\PYGcolorful{p}{);}
          \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
          \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
          \PYGcolorful{n}{jit\PYGcolorfulZus{}addi}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,(}\PYGcolorful{n}{i}\PYGcolorful{o}{+}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{)}\PYGcolorful{o}{*}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);}
          \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{R3}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{],}\PYGcolorful{n}{frame}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// TODO type check!}
          \PYGcolorful{n}{jit\PYGcolorfulZus{}stra}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
          \PYGcolorful{n}{found} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{;}
          \PYGcolorful{k}{break}\PYGcolorful{p}{;}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{found}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}sput field \PYGcolorfulZpc{}s not found!\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{lookup\PYGcolorfulZus{}name}\PYGcolorful{p}{);}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
        \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}QUOTE}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{Cell}\PYGcolorful{o}{*} \PYGcolorful{n}{arg}\PYGcolorful{p}{;}
      \PYGcolorful{n}{args} \PYGcolorful{o}{=} \PYGcolorful{n}{orig\PYGcolorfulZus{}args}\PYGcolorful{p}{;}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{o}{!}\PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{args}\PYGcolorful{p}{))} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZlt{}empty (quote) not allowed\PYGcolorfulZgt{}}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
        \PYGcolorful{k}{return} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{n}{arg} \PYGcolorful{o}{=} \PYGcolorful{n}{car}\PYGcolorful{p}{(}\PYGcolorful{n}{args}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}lea}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{arg}\PYGcolorful{p}{);}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}CAR}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}

      \PYGcolorful{c+c1}{// type check \PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}addi}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{2}\PYGcolorful{o}{*}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}lea}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{consed\PYGcolorfulZus{}type\PYGcolorfulZus{}error}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}cmpi}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{TAG\PYGcolorfulZus{}CONS}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movne}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{c+c1}{// \PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}lea}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{prototype\PYGcolorfulZus{}nil}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}cmpi}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// check for null cell}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}moveq}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}CDR}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}addi}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);}

      \PYGcolorful{c+c1}{// type check \PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}addi}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// because already added PTRSZ}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}lea}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{consed\PYGcolorfulZus{}type\PYGcolorfulZus{}error}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}cmpi}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{TAG\PYGcolorfulZus{}CONS}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movne}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{c+c1}{// \PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}lea}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{prototype\PYGcolorfulZus{}nil}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}cmpi}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// check for null cell}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}moveq}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}CONS}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR1}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call2}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}cons}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}cons\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}CONCAT}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR1}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call2}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}concat}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}concat\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}SUBSTR}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR1}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call3}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}substr}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}substr\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}GET8}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{k+kt}{char} \PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{64}\PYGcolorful{p}{];}
      \PYGcolorful{k+kt}{char} \PYGcolorful{n}{label\PYGcolorfulZus{}ok}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{64}\PYGcolorful{p}{];}
      \PYGcolorful{n}{sprintf}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}Lskip\PYGcolorfulZus{}\PYGcolorfulZpc{}d\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{o}{++}\PYGcolorful{n}{label\PYGcolorfulZus{}skip\PYGcolorfulZus{}count}\PYGcolorful{p}{);}
      \PYGcolorful{n}{sprintf}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}ok}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}Lok\PYGcolorfulZus{}\PYGcolorfulZpc{}d\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{label\PYGcolorfulZus{}skip\PYGcolorfulZus{}count}\PYGcolorful{p}{);}

      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// offset \PYGcolorfulZhy{}\PYGcolorfulZgt{} R2}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{R1}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// save original cell in r0}

      \PYGcolorful{c+c1}{// todo: compile\PYGcolorfulZhy{}time checking would be much more awesome}
      \PYGcolorful{c+c1}{// type check}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}addi}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{2}\PYGcolorful{o}{*}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}cmpi}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{TAG\PYGcolorfulZus{}BYTES}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// todo: better perf with mask?}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}je}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}ok}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}cmpi}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{TAG\PYGcolorfulZus{}STR}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}je}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}ok}\PYGcolorful{p}{);}

      \PYGcolorful{c+c1}{// wrong type}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{R3}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}jmp}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{);}

      \PYGcolorful{c+c1}{// good type}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}label}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}ok}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// get original cell from r3}

\PYGcolorful{c+cp}{\PYGcolorfulZsh{}ifdef CHECK\PYGcolorfulZus{}BOUNDS}
      \PYGcolorful{c+c1}{// bounds check \PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}addi}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}cmpr}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{R1}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}jge}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{);}
      \PYGcolorful{c+c1}{// \PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}endif}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// string address}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}addr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{R3}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldrb}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// data in r3}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}label}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{);}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,} \PYGcolorful{n}{R3}\PYGcolorful{p}{);}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}

    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}GET16}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{k+kt}{char} \PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{64}\PYGcolorful{p}{];}
      \PYGcolorful{k+kt}{char} \PYGcolorful{n}{label\PYGcolorfulZus{}ok}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{64}\PYGcolorful{p}{];}
      \PYGcolorful{n}{sprintf}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}Lskip\PYGcolorfulZus{}\PYGcolorfulZpc{}d\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{o}{++}\PYGcolorful{n}{label\PYGcolorfulZus{}skip\PYGcolorfulZus{}count}\PYGcolorful{p}{);}
      \PYGcolorful{n}{sprintf}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}ok}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}Lok\PYGcolorfulZus{}\PYGcolorfulZpc{}d\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{n}{label\PYGcolorfulZus{}skip\PYGcolorfulZus{}count}\PYGcolorful{p}{);}

      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// offset \PYGcolorfulZhy{}\PYGcolorfulZgt{} R2}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{R1}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// save original cell in r0}

      \PYGcolorful{c+c1}{// todo: compile\PYGcolorfulZhy{}time checking would be much more awesome}
      \PYGcolorful{c+c1}{// type check}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}addi}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{2}\PYGcolorful{o}{*}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}cmpi}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{TAG\PYGcolorfulZus{}BYTES}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// todo: better perf with mask?}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}je}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}ok}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}cmpi}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{TAG\PYGcolorfulZus{}STR}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}je}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}ok}\PYGcolorful{p}{);}

      \PYGcolorful{c+c1}{// wrong type}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{R3}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}jmp}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{);}

      \PYGcolorful{c+c1}{// good type}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}label}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}ok}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// get original cell from r3}

\PYGcolorful{c+cp}{\PYGcolorfulZsh{}ifdef CHECK\PYGcolorfulZus{}BOUNDS}
      \PYGcolorful{c+c1}{// bounds check \PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}addi}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}cmpr}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{R1}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}jge}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{);}
      \PYGcolorful{c+c1}{// \PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}endif}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// string address}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}addr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{R3}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldrs}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// data in r3}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}label}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{);}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,} \PYGcolorful{n}{R3}\PYGcolorful{p}{);}

      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}

    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}PUT8}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{k+kt}{char} \PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{64}\PYGcolorful{p}{];}
      \PYGcolorful{n}{sprintf}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}Lskip\PYGcolorfulZus{}\PYGcolorfulZpc{}d\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{o}{++}\PYGcolorful{n}{label\PYGcolorfulZus{}skip\PYGcolorfulZus{}count}\PYGcolorful{p}{);}

      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// offset \PYGcolorfulZhy{}\PYGcolorfulZgt{} R2}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R3}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// byte to store \PYGcolorfulZhy{}\PYGcolorfulZgt{} R3}

\PYGcolorful{c+cp}{\PYGcolorfulZsh{}ifdef CHECK\PYGcolorfulZus{}BOUNDS}
      \PYGcolorful{c+c1}{// bounds check \PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}addi}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}cmpr}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{R1}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}jge}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{);}
      \PYGcolorful{c+c1}{// \PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}endif}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// string address}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}addr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}strb}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// address is in r1, data in r3}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}label}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{);}

      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}PUT16}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{k+kt}{char} \PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{64}\PYGcolorful{p}{];}
      \PYGcolorful{n}{sprintf}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}Lskip\PYGcolorfulZus{}\PYGcolorfulZpc{}d\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{o}{++}\PYGcolorful{n}{label\PYGcolorfulZus{}skip\PYGcolorfulZus{}count}\PYGcolorful{p}{);}

      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// offset \PYGcolorfulZhy{}\PYGcolorfulZgt{} R2}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R3}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// byte to store \PYGcolorfulZhy{}\PYGcolorfulZgt{} R3}

\PYGcolorful{c+cp}{\PYGcolorfulZsh{}ifdef CHECK\PYGcolorfulZus{}BOUNDS}
      \PYGcolorful{c+c1}{// bounds check \PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}addi}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}cmpr}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{R1}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}jge}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{);}
      \PYGcolorful{c+c1}{// \PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}endif}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// string address}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}addr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}strs}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// address is in r1, data in r3}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}label}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{);}

      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}GET32}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// offset \PYGcolorfulZhy{}\PYGcolorfulZgt{} R2}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{R3}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R3}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// string address}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// offset * 4}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}shlr}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{R1}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}addr}\PYGcolorful{p}{(}\PYGcolorful{n}{R3}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldrw}\PYGcolorful{p}{(}\PYGcolorful{n}{R3}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// load to r3}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,} \PYGcolorful{n}{R3}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// FIXME}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}

      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}PUT32}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{k+kt}{char} \PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{64}\PYGcolorful{p}{];}
      \PYGcolorful{n}{sprintf}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}Lskip\PYGcolorfulZus{}\PYGcolorfulZpc{}d\PYGcolorfulZdq{}}\PYGcolorful{p}{,}\PYGcolorful{o}{++}\PYGcolorful{n}{label\PYGcolorfulZus{}skip\PYGcolorfulZus{}count}\PYGcolorful{p}{);}

      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// offset \PYGcolorfulZhy{}\PYGcolorfulZgt{} R2}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{R3}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// word to store \PYGcolorfulZhy{}\PYGcolorfulZgt{} R3}

\PYGcolorful{c+cp}{\PYGcolorfulZsh{}ifdef CHECK\PYGcolorfulZus{}BOUNDS}
      \PYGcolorful{c+c1}{// bounds check \PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}addi}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}cmpr}\PYGcolorful{p}{(}\PYGcolorful{n}{R2}\PYGcolorful{p}{,}\PYGcolorful{n}{R1}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}jge}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{);}
      \PYGcolorful{c+c1}{// \PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}\PYGcolorfulZhy{}}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}endif}

      \PYGcolorful{c+c1}{// TODO: 32\PYGcolorfulZhy{}bit align}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// string address}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}addr}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{,}\PYGcolorful{n}{R2}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}strw}\PYGcolorful{p}{(}\PYGcolorful{n}{R1}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// store from r3}

      \PYGcolorful{n}{jit\PYGcolorfulZus{}label}\PYGcolorful{p}{(}\PYGcolorful{n}{label\PYGcolorfulZus{}skip}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{R1}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}debug\PYGcolorfulZdq{}}\PYGcolorful{p}{);}

      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}ALLOC}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}num\PYGcolorfulZus{}bytes}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}bytes\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}ALLOC\PYGcolorfulZus{}STR}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}num\PYGcolorfulZus{}string}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}string\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}BYTES\PYGcolorfulZus{}TO\PYGcolorfulZus{}STR}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}string\PYGcolorfulZus{}from\PYGcolorfulZus{}bytes}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}string\PYGcolorfulZus{}to\PYGcolorfulZus{}bytes\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}WRITE}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR1}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}host\PYGcolorfulZus{}call\PYGcolorfulZus{}enter}\PYGcolorful{p}{();}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call2}\PYGcolorful{p}{(}\PYGcolorful{n}{lisp\PYGcolorfulZus{}write\PYGcolorfulZus{}to\PYGcolorfulZus{}cell}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}lisp\PYGcolorfulZus{}write\PYGcolorfulZus{}to\PYGcolorfulZus{}cell\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}host\PYGcolorfulZus{}call\PYGcolorfulZus{}exit}\PYGcolorful{p}{();}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}READ}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}host\PYGcolorfulZus{}call\PYGcolorfulZus{}enter}\PYGcolorful{p}{();}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{read\PYGcolorfulZus{}string\PYGcolorfulZus{}cell}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}read\PYGcolorfulZus{}string\PYGcolorfulZus{}cell\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}host\PYGcolorfulZus{}call\PYGcolorfulZus{}exit}\PYGcolorful{p}{();}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}EVAL}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}host\PYGcolorfulZus{}call\PYGcolorfulZus{}enter}\PYGcolorful{p}{();}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{platform\PYGcolorfulZus{}eval}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}platform\PYGcolorfulZus{}eval\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}host\PYGcolorfulZus{}call\PYGcolorfulZus{}exit}\PYGcolorful{p}{();}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}SIZE}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}addi}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// fetch size \PYGcolorfulZhy{}\PYGcolorfulZgt{} R0}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{,} \PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZus{}int\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{return\PYGcolorfulZus{}type}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{==} \PYGcolorful{n}{TAG\PYGcolorfulZus{}INT}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{);}
        \PYGcolorful{n}{compiled\PYGcolorfulZus{}type} \PYGcolorful{o}{=} \PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}

      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}GC}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{push\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}lea}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR1}\PYGcolorful{p}{,(}\PYGcolorful{n}{jit\PYGcolorfulZus{}word\PYGcolorfulZus{}t}\PYGcolorful{p}{)}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{stack\PYGcolorfulZus{}end}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR2}\PYGcolorful{p}{,}\PYGcolorful{n}{RSP}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call3}\PYGcolorful{p}{(}\PYGcolorful{n}{collect\PYGcolorfulZus{}garbage}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}collect\PYGcolorfulZus{}garbage\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{n}{pop\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
	\PYGcolorful{c+c1}{//@add start}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}GC\PYGcolorfulZus{}IF\PYGcolorfulZus{}NEEDED}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}} 
      \PYGcolorful{n}{push\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}lea}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movi}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR1}\PYGcolorful{p}{,(}\PYGcolorful{n}{jit\PYGcolorfulZus{}word\PYGcolorfulZus{}t}\PYGcolorful{p}{)}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{stack\PYGcolorfulZus{}end}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}movr}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR2}\PYGcolorful{p}{,}\PYGcolorful{n}{RSP}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call3}\PYGcolorful{p}{(}\PYGcolorful{n}{collect\PYGcolorfulZus{}garbage\PYGcolorfulZus{}if\PYGcolorfulZus{}needed}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}collect\PYGcolorfulZus{}garbage\PYGcolorfulZus{}if\PYGcolorfulZus{}needed\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{n}{pop\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
	\PYGcolorful{c+c1}{//@add end}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}SYMBOLS}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}lea}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{list\PYGcolorfulZus{}symbols}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}list\PYGcolorfulZus{}symbols\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}DEBUG}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{c+c1}{//jit\PYGcolorfulZus{}call(platform\PYGcolorfulZus{}debug,\PYGcolorfulZdq{}platform\PYGcolorfulZus{}debug\PYGcolorfulZdq{});}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}PRINT}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{push\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}host\PYGcolorfulZus{}call\PYGcolorfulZus{}enter}\PYGcolorful{p}{();}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{lisp\PYGcolorfulZus{}print}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}lisp\PYGcolorfulZus{}print\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}host\PYGcolorfulZus{}call\PYGcolorfulZus{}exit}\PYGcolorful{p}{();}
      \PYGcolorful{n}{pop\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}MOUNT}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR1}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}host\PYGcolorfulZus{}call\PYGcolorfulZus{}enter}\PYGcolorful{p}{();}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call2}\PYGcolorful{p}{(}\PYGcolorful{n}{fs\PYGcolorfulZus{}mount}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}fs\PYGcolorfulZus{}mount\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}host\PYGcolorfulZus{}call\PYGcolorfulZus{}exit}\PYGcolorful{p}{();}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}MMAP}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}host\PYGcolorfulZus{}call\PYGcolorfulZus{}enter}\PYGcolorful{p}{();}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{fs\PYGcolorfulZus{}mmap}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}fs\PYGcolorfulZus{}mmap\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}host\PYGcolorfulZus{}call\PYGcolorfulZus{}exit}\PYGcolorful{p}{();}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}OPEN}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{push\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}host\PYGcolorfulZus{}call\PYGcolorfulZus{}enter}\PYGcolorful{p}{();}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{fs\PYGcolorfulZus{}open}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}fs\PYGcolorfulZus{}open\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}host\PYGcolorfulZus{}call\PYGcolorfulZus{}exit}\PYGcolorful{p}{();}
      \PYGcolorful{n}{pop\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}RECV}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{push\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}host\PYGcolorfulZus{}call\PYGcolorfulZus{}enter}\PYGcolorful{p}{();}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call}\PYGcolorful{p}{(}\PYGcolorful{n}{stream\PYGcolorfulZus{}read}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}stream\PYGcolorfulZus{}read\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}host\PYGcolorfulZus{}call\PYGcolorfulZus{}exit}\PYGcolorful{p}{();}
      \PYGcolorful{n}{pop\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{k}{case} \PYGcolorful{n+nl}{BUILTIN\PYGcolorfulZus{}SEND}\PYGcolorful{p}{:} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR0}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{ARGR1}\PYGcolorful{p}{,}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
      \PYGcolorful{n}{push\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}host\PYGcolorfulZus{}call\PYGcolorfulZus{}enter}\PYGcolorful{p}{();}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}call2}\PYGcolorful{p}{(}\PYGcolorful{n}{stream\PYGcolorfulZus{}write}\PYGcolorful{p}{,}\PYGcolorful{l+s}{\PYGcolorfulZdq{}stream\PYGcolorfulZus{}write\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}host\PYGcolorfulZus{}call\PYGcolorfulZus{}exit}\PYGcolorful{p}{();}
      \PYGcolorful{n}{pop\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}
      \PYGcolorful{k}{break}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}
  \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
    \PYGcolorful{c+c1}{// λλλ lambda call λλλ}

    \PYGcolorful{k+kt}{int} \PYGcolorful{n}{spo\PYGcolorfulZus{}adjust} \PYGcolorful{o}{=} \PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{,} \PYGcolorful{n}{j}\PYGcolorful{p}{;}

    \PYGcolorful{c+c1}{// save our args}

    \PYGcolorful{k+kt}{int} \PYGcolorful{n}{pushed} \PYGcolorful{o}{=} \PYGcolorful{n}{push\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}
    \PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{sp}\PYGcolorful{o}{+=}\PYGcolorful{n}{pushed}\PYGcolorful{p}{;}

    \PYGcolorful{k}{for} \PYGcolorful{p}{(}\PYGcolorful{n}{j}\PYGcolorful{o}{=}\PYGcolorful{n}{argi}\PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{;} \PYGcolorful{n}{j}\PYGcolorful{o}{\PYGcolorfulZgt{}=}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{;} \PYGcolorful{n}{j}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZhy{}}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{j}\PYGcolorful{o}{\PYGcolorfulZgt{}=}\PYGcolorful{n}{ARG\PYGcolorfulZus{}SPILLOVER}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{c+c1}{// pass arg on stack}

        \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
        \PYGcolorful{n}{jit\PYGcolorfulZus{}push}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{R0}\PYGcolorful{p}{);}
        \PYGcolorful{n}{spo\PYGcolorfulZus{}adjust}\PYGcolorful{o}{++}\PYGcolorful{p}{;}
        \PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{sp}\PYGcolorful{o}{++}\PYGcolorful{p}{;}
      \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
        \PYGcolorful{c+c1}{// pass arg in reg (LBDREG + slot)}

        \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{type} \PYGcolorful{o}{==} \PYGcolorful{n}{ARGT\PYGcolorfulZus{}REG}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{c+c1}{// FIXME kludge?}
          \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{l+m+mi}{1} \PYGcolorful{o}{||} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{slot}\PYGcolorful{o}{\PYGcolorfulZlt{}}\PYGcolorful{n}{j}\PYGcolorful{o}{+}\PYGcolorful{n}{LBDREG}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
            \PYGcolorful{k+kt}{int} \PYGcolorful{n}{offset} \PYGcolorful{o}{=} \PYGcolorful{p}{((}\PYGcolorful{n}{pushed}\PYGcolorful{o}{+}\PYGcolorful{n}{spo\PYGcolorfulZus{}adjust}\PYGcolorful{p}{)} \PYGcolorful{o}{\PYGcolorfulZhy{}} \PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{slot}\PYGcolorful{o}{\PYGcolorfulZhy{}}\PYGcolorful{n}{LBDREG}\PYGcolorful{p}{)} \PYGcolorful{o}{\PYGcolorfulZhy{}} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{);}
            \PYGcolorful{c+c1}{// register already clobbered, load from stack}
            \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}\PYGcolorfulZhy{}\PYGcolorfulZhy{} loading clobbered reg \PYGcolorfulZpc{}d from stack offset \PYGcolorfulZpc{}d to reg \PYGcolorfulZpc{}d\PYGcolorfulZbs{}n\PYGcolorfulZdq{},argdefs[j].slot,offset,LBDREG+j);}
            \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr\PYGcolorfulZus{}stack}\PYGcolorful{p}{(}\PYGcolorful{n}{LBDREG}\PYGcolorful{o}{+}\PYGcolorful{n}{j}\PYGcolorful{p}{,} \PYGcolorful{n}{offset}\PYGcolorful{o}{*}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);}
          \PYGcolorful{p}{\PYGcolorfulZcb{}} \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
            \PYGcolorful{c+c1}{// no need to move a reg into itself}
            \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{].}\PYGcolorful{n}{slot}\PYGcolorful{o}{!=}\PYGcolorful{n}{j}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
              \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{LBDREG}\PYGcolorful{o}{+}\PYGcolorful{n}{j}\PYGcolorful{p}{,} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
            \PYGcolorful{p}{\PYGcolorfulZcb{}}
          \PYGcolorful{p}{\PYGcolorfulZcb{}}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}
        \PYGcolorful{k}{else} \PYGcolorful{p}{\PYGcolorfulZob{}}
          \PYGcolorful{n}{load\PYGcolorfulZus{}cell}\PYGcolorful{p}{(}\PYGcolorful{n}{LBDREG}\PYGcolorful{o}{+}\PYGcolorful{n}{j}\PYGcolorful{p}{,} \PYGcolorful{n}{argdefs}\PYGcolorful{p}{[}\PYGcolorful{n}{j}\PYGcolorful{p}{],} \PYGcolorful{n}{frame}\PYGcolorful{p}{);}
        \PYGcolorful{p}{\PYGcolorfulZcb{}}
      \PYGcolorful{p}{\PYGcolorfulZcb{}}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}

    \PYGcolorful{n}{jit\PYGcolorfulZus{}lea}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{op\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// load cell}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}addi}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{,}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// \PYGcolorfulZam{}cell\PYGcolorfulZhy{}\PYGcolorfulZgt{}dr.next}
    \PYGcolorful{n}{jit\PYGcolorfulZus{}ldr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// cell\PYGcolorfulZhy{}\PYGcolorfulZgt{}dr.next}

    \PYGcolorful{n}{jit\PYGcolorfulZus{}callr}\PYGcolorful{p}{(}\PYGcolorful{n}{R0}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{// the call!}

    \PYGcolorful{k}{if} \PYGcolorful{p}{(}\PYGcolorful{n}{spo\PYGcolorfulZus{}adjust}\PYGcolorful{p}{)} \PYGcolorful{p}{\PYGcolorfulZob{}}
      \PYGcolorful{n}{jit\PYGcolorfulZus{}inc\PYGcolorfulZus{}stack}\PYGcolorful{p}{(}\PYGcolorful{n}{spo\PYGcolorfulZus{}adjust}\PYGcolorful{o}{*}\PYGcolorful{n}{PTRSZ}\PYGcolorful{p}{);}
      \PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{sp}\PYGcolorful{o}{\PYGcolorfulZhy{}=}\PYGcolorful{n}{spo\PYGcolorfulZus{}adjust}\PYGcolorful{p}{;}
    \PYGcolorful{p}{\PYGcolorfulZcb{}}

    \PYGcolorful{n}{pop\PYGcolorfulZus{}frame\PYGcolorfulZus{}regs}\PYGcolorful{p}{(}\PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{f}\PYGcolorful{p}{);}
    \PYGcolorful{n}{frame}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{sp}\PYGcolorful{o}{\PYGcolorfulZhy{}=}\PYGcolorful{n}{pushed}\PYGcolorful{p}{;}
  \PYGcolorful{p}{\PYGcolorfulZcb{}}

\PYGcolorful{c+cp}{\PYGcolorfulZsh{}ifdef CPU\PYGcolorfulZus{}X64}
  \PYGcolorful{n}{fflush}\PYGcolorful{p}{(}\PYGcolorful{n}{jit\PYGcolorfulZus{}out}\PYGcolorful{p}{);}
\PYGcolorful{c+cp}{\PYGcolorfulZsh{}endif}

  \PYGcolorful{c+c1}{// at this point, registers R1\PYGcolorfulZhy{}R6 are filled, execute}
  \PYGcolorful{k}{return} \PYGcolorful{n}{clean\PYGcolorfulZus{}return}\PYGcolorful{p}{(}\PYGcolorful{n}{args\PYGcolorfulZus{}pushed}\PYGcolorful{p}{,} \PYGcolorful{n}{frame}\PYGcolorful{p}{,} \PYGcolorful{n}{compiled\PYGcolorfulZus{}type}\PYGcolorful{p}{);}
\PYGcolorful{p}{\PYGcolorfulZcb{}}

\PYGcolorful{n}{env\PYGcolorfulZus{}t}\PYGcolorful{o}{*} \PYGcolorful{n+nf}{get\PYGcolorfulZus{}global\PYGcolorfulZus{}env}\PYGcolorful{p}{()} \PYGcolorful{p}{\PYGcolorfulZob{}}
  \PYGcolorful{k}{return} \PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{;}
\PYGcolorful{p}{\PYGcolorfulZcb{}}

\PYGcolorful{k+kt}{void} \PYGcolorful{n+nf}{init\PYGcolorfulZus{}compiler}\PYGcolorful{p}{()} \PYGcolorful{p}{\PYGcolorfulZob{}}
  \PYGcolorful{n}{Cell}\PYGcolorful{o}{**} \PYGcolorful{n}{signature} \PYGcolorful{o}{=} \PYGcolorful{n}{malloc}\PYGcolorful{p}{(}\PYGcolorful{k}{sizeof}\PYGcolorful{p}{(}\PYGcolorful{n}{Cell}\PYGcolorful{o}{*}\PYGcolorful{p}{)}\PYGcolorful{o}{*}\PYGcolorful{l+m+mi}{3}\PYGcolorful{p}{);}

  \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[compiler] creating global env hash table\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{});}
  \PYGcolorful{n}{global\PYGcolorfulZus{}env} \PYGcolorful{o}{=} \PYGcolorful{n}{sm\PYGcolorfulZus{}new}\PYGcolorful{p}{(}\PYGcolorful{l+m+mi}{1000}\PYGcolorful{p}{);}

  \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[compiler] init\PYGcolorfulZus{}allocator\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{});}
  \PYGcolorful{n}{init\PYGcolorfulZus{}allocator}\PYGcolorful{p}{();}

  \PYGcolorful{n}{prototype\PYGcolorfulZus{}nil} \PYGcolorful{o}{=} \PYGcolorful{n}{alloc\PYGcolorfulZus{}nil}\PYGcolorful{p}{();}
  \PYGcolorful{n}{prototype\PYGcolorfulZus{}type\PYGcolorfulZus{}error} \PYGcolorful{o}{=} \PYGcolorful{n}{alloc\PYGcolorfulZus{}error}\PYGcolorful{p}{(}\PYGcolorful{n}{ERR\PYGcolorfulZus{}INVALID\PYGcolorfulZus{}PARAM\PYGcolorfulZus{}TYPE}\PYGcolorful{p}{);}
  \PYGcolorful{n}{consed\PYGcolorfulZus{}type\PYGcolorfulZus{}error} \PYGcolorful{o}{=} \PYGcolorful{n}{alloc\PYGcolorfulZus{}cons}\PYGcolorful{p}{(}\PYGcolorful{n}{prototype\PYGcolorfulZus{}type\PYGcolorfulZus{}error}\PYGcolorful{p}{,}\PYGcolorful{n}{prototype\PYGcolorfulZus{}nil}\PYGcolorful{p}{);}
  \PYGcolorful{n}{prototype\PYGcolorfulZus{}any} \PYGcolorful{o}{=} \PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
  \PYGcolorful{n}{prototype\PYGcolorfulZus{}any}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{=} \PYGcolorful{n}{TAG\PYGcolorfulZus{}ANY}\PYGcolorful{p}{;}
  \PYGcolorful{n}{prototype\PYGcolorfulZus{}void} \PYGcolorful{o}{=} \PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
  \PYGcolorful{n}{prototype\PYGcolorfulZus{}void}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{=} \PYGcolorful{n}{TAG\PYGcolorfulZus{}VOID}\PYGcolorful{p}{;}
  \PYGcolorful{n}{prototype\PYGcolorfulZus{}symbol} \PYGcolorful{o}{=} \PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}symbol\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
  \PYGcolorful{n}{prototype\PYGcolorfulZus{}int} \PYGcolorful{o}{=} \PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
  \PYGcolorful{n}{prototype\PYGcolorfulZus{}struct} \PYGcolorful{o}{=} \PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
  \PYGcolorful{n}{prototype\PYGcolorfulZus{}struct}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{=} \PYGcolorful{n}{TAG\PYGcolorfulZus{}STRUCT}\PYGcolorful{p}{;}
  \PYGcolorful{n}{prototype\PYGcolorfulZus{}struct\PYGcolorfulZus{}def} \PYGcolorful{o}{=} \PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
  \PYGcolorful{n}{prototype\PYGcolorfulZus{}struct\PYGcolorfulZus{}def}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{=} \PYGcolorful{n}{TAG\PYGcolorfulZus{}STRUCT\PYGcolorfulZus{}DEF}\PYGcolorful{p}{;}
  \PYGcolorful{n}{prototype\PYGcolorfulZus{}stream} \PYGcolorful{o}{=} \PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
  \PYGcolorful{n}{prototype\PYGcolorfulZus{}stream}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{=} \PYGcolorful{n}{TAG\PYGcolorfulZus{}STREAM}\PYGcolorful{p}{;}
  \PYGcolorful{n}{prototype\PYGcolorfulZus{}string} \PYGcolorful{o}{=} \PYGcolorful{n}{alloc\PYGcolorfulZus{}string\PYGcolorfulZus{}copy}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}string\PYGcolorfulZdq{}}\PYGcolorful{p}{);}
  \PYGcolorful{n}{prototype\PYGcolorfulZus{}lambda} \PYGcolorful{o}{=} \PYGcolorful{n}{alloc\PYGcolorfulZus{}int}\PYGcolorful{p}{(}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{);}
  \PYGcolorful{n}{prototype\PYGcolorfulZus{}lambda}\PYGcolorful{o}{\PYGcolorfulZhy{}\PYGcolorfulZgt{}}\PYGcolorful{n}{tag} \PYGcolorful{o}{=} \PYGcolorful{n}{TAG\PYGcolorfulZus{}LAMBDA}\PYGcolorful{p}{;}
  \PYGcolorful{n}{prototype\PYGcolorfulZus{}cons} \PYGcolorful{o}{=} \PYGcolorful{n}{alloc\PYGcolorfulZus{}cons}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}nil}\PYGcolorful{p}{(),}\PYGcolorful{n}{alloc\PYGcolorfulZus{}nil}\PYGcolorful{p}{());}

  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}nil\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{prototype\PYGcolorfulZus{}nil}\PYGcolorful{p}{,} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}type\PYGcolorfulZus{}error\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{consed\PYGcolorfulZus{}type\PYGcolorfulZus{}error}\PYGcolorful{p}{,} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}

  \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[compiler] inserting symbols\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{});}

  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}symbol}\PYGcolorful{p}{;} \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}any}\PYGcolorful{p}{;}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}def\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}DEF}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}let\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}LET}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}

  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}struct\PYGcolorfulZus{}def}\PYGcolorful{p}{;} \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}symbol}\PYGcolorful{p}{;} \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}any}\PYGcolorful{p}{;}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}new\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}NEW}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}struct}\PYGcolorful{p}{;}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}sget\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}SGET}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}sput\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}SPUT}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{3}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}

  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;} \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}+\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}ADD}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZhy{}\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}SUB}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}*\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}MUL}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}/\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}DIV}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}\PYGcolorfulZpc{}\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}MOD}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}bitand\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}BITAND}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}bitor\PYGcolorfulZdq{}}\PYGcolorful{p}{),}  \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}BITOR}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}bitnot\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}BITNOT}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}bitxor\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}BITXOR}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}shl\PYGcolorfulZdq{}}\PYGcolorful{p}{),}    \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}SHL}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}shr\PYGcolorfulZdq{}}\PYGcolorful{p}{),}    \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}SHR}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}

  \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[compiler] arithmetic\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{});}

  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}lt\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}LT}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}gt\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}GT}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}eq\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}EQ}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}

  \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[compiler] compare\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{});}

  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;} \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}lambda}\PYGcolorful{p}{;} \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}lambda}\PYGcolorful{p}{;} 
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}if\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}IF}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{3}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}fn\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}FN}\PYGcolorful{p}{,} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}while\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}WHILE}\PYGcolorful{p}{,} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}do\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}DO}\PYGcolorful{p}{,} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}

  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}any}\PYGcolorful{p}{;}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}print\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}PRINT}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}

  \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[compiler] flow\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{});}

  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}cons}\PYGcolorful{p}{;}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}car\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}CAR}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}cdr\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}CDR}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}

  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}any}\PYGcolorful{p}{;} \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}any}\PYGcolorful{p}{;}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}cons\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}CONS}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}list\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}LIST}\PYGcolorful{p}{,} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}quote\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}QUOTE}\PYGcolorful{p}{,} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}struct\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}STRUCT}\PYGcolorful{p}{,} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{c+c1}{//insert\PYGcolorfulZus{}symbol(alloc\PYGcolorfulZus{}sym(\PYGcolorfulZdq{}map\PYGcolorfulZdq{}), alloc\PYGcolorfulZus{}builtin(BUILTIN\PYGcolorfulZus{}MAP), \PYGcolorfulZam{}global\PYGcolorfulZus{}env);}

  \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[compiler] lists\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{});}

  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}string}\PYGcolorful{p}{;}
  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}string}\PYGcolorful{p}{;}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}concat\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}CONCAT}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}

  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}string}\PYGcolorful{p}{;}
  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}substr\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}SUBSTR}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{3}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}put8\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}PUT8}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{3}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}get8\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}GET8}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}put16\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}PUT16}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{3}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}get16\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}GET16}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}get32\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}GET32}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}put32\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}PUT32}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{3}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}size\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}SIZE}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}

  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}int}\PYGcolorful{p}{;}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}ALLOC}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}alloc\PYGcolorfulZhy{}str\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}ALLOC\PYGcolorfulZus{}STR}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}

  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}any}\PYGcolorful{p}{;}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}bytes\PYGcolorfulZhy{}\PYGcolorfulZgt{}str\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}BYTES\PYGcolorfulZus{}TO\PYGcolorfulZus{}STR}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,} \PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}

  \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[compiler] strings\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{});}

  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}any}\PYGcolorful{p}{;}
  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}string}\PYGcolorful{p}{;}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}write\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}WRITE}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}eval\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}EVAL}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}string}\PYGcolorful{p}{;}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}read\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}READ}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}

  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}string}\PYGcolorful{p}{;}
  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}cons}\PYGcolorful{p}{;}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}mount\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}MOUNT}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}open\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}OPEN}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}mmap\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}MMAP}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}

  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{0}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}stream}\PYGcolorful{p}{;}
  \PYGcolorful{n}{signature}\PYGcolorful{p}{[}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{]}\PYGcolorful{o}{=}\PYGcolorful{n}{prototype\PYGcolorfulZus{}any}\PYGcolorful{p}{;}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}recv\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}RECV}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{1}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}send\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}SEND}\PYGcolorful{p}{,} \PYGcolorful{n}{alloc\PYGcolorfulZus{}list}\PYGcolorful{p}{(}\PYGcolorful{n}{signature}\PYGcolorful{p}{,}\PYGcolorful{l+m+mi}{2}\PYGcolorful{p}{)),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}


  \PYGcolorful{c+c1}{//printf(\PYGcolorfulZdq{}[compiler] write/eval\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n\PYGcolorfulZdq{});}

  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}gc\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}GC}\PYGcolorful{p}{,} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}gc\PYGcolorfulZhy{}if\PYGcolorfulZhy{}needed\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}GC\PYGcolorfulZus{}IF\PYGcolorfulZus{}NEEDED}\PYGcolorful{p}{,} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);} \PYGcolorful{c+c1}{//@add}
  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}symbols\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}SYMBOLS}\PYGcolorful{p}{,} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}

  \PYGcolorful{n}{insert\PYGcolorfulZus{}symbol}\PYGcolorful{p}{(}\PYGcolorful{n}{alloc\PYGcolorfulZus{}sym}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}debug\PYGcolorfulZdq{}}\PYGcolorful{p}{),} \PYGcolorful{n}{alloc\PYGcolorfulZus{}builtin}\PYGcolorful{p}{(}\PYGcolorful{n}{BUILTIN\PYGcolorfulZus{}DEBUG}\PYGcolorful{p}{,} \PYGcolorful{n+nb}{NULL}\PYGcolorful{p}{),} \PYGcolorful{o}{\PYGcolorfulZam{}}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{);}

  \PYGcolorful{n}{printf}\PYGcolorful{p}{(}\PYGcolorful{l+s}{\PYGcolorfulZdq{}[compiler] interim knows \PYGcolorfulZpc{}u symbols. enter (symbols) to see them.}\PYGcolorful{l+s+se}{\PYGcolorfulZbs{}r\PYGcolorfulZbs{}n}\PYGcolorful{l+s}{\PYGcolorfulZdq{}}\PYGcolorful{p}{,} \PYGcolorful{n}{sm\PYGcolorfulZus{}get\PYGcolorfulZus{}count}\PYGcolorful{p}{(}\PYGcolorful{n}{global\PYGcolorfulZus{}env}\PYGcolorful{p}{));}
\PYGcolorful{p}{\PYGcolorfulZcb{}}
\end{Verbatim}
